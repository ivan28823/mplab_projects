

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 30 22:10:15 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	smallconst
    55  000800                     __psmallconst:
    56                           	opt stack 0
    57  000800  00                 	db	0
    58  000801  00                 	db	0
    59  000802  00                 	db	0
    60  000803  00                 	db	0
    61  000804  00                 	db	0
    62  000805  00                 	db	0
    63  000806  00                 	db	0
    64  000807  00                 	db	0
    65  000808  1F                 	db	31
    66  000809  00                 	db	0
    67  00080A  00                 	db	0
    68  00080B  00                 	db	0
    69  00080C  00                 	db	0
    70  00080D  00                 	db	0
    71  00080E  00                 	db	0
    72  00080F  1F                 	db	31
    73  000810  1F                 	db	31
    74  000811  00                 	db	0
    75  000812  00                 	db	0
    76  000813  00                 	db	0
    77  000814  00                 	db	0
    78  000815  00                 	db	0
    79  000816  1F                 	db	31
    80  000817  1F                 	db	31
    81  000818  1F                 	db	31
    82  000819  00                 	db	0
    83  00081A  00                 	db	0
    84  00081B  00                 	db	0
    85  00081C  00                 	db	0
    86  00081D  1F                 	db	31
    87  00081E  1F                 	db	31
    88  00081F  1F                 	db	31
    89  000820  1F                 	db	31
    90  000821  00                 	db	0
    91  000822  00                 	db	0
    92  000823  00                 	db	0
    93  000824  1F                 	db	31
    94  000825  1F                 	db	31
    95  000826  1F                 	db	31
    96  000827  1F                 	db	31
    97  000828  1F                 	db	31
    98  000829  00                 	db	0
    99  00082A  00                 	db	0
   100  00082B  1F                 	db	31
   101  00082C  1F                 	db	31
   102  00082D  1F                 	db	31
   103  00082E  1F                 	db	31
   104  00082F  1F                 	db	31
   105  000830  1F                 	db	31
   106  000831  00                 	db	0
   107  000832  1F                 	db	31
   108  000833  1F                 	db	31
   109  000834  1F                 	db	31
   110  000835  1F                 	db	31
   111  000836  1F                 	db	31
   112  000837  1F                 	db	31
   113  000838  1F                 	db	31
   114  000839  1F                 	db	31
   115  00083A  1F                 	db	31
   116  00083B  1F                 	db	31
   117  00083C  1F                 	db	31
   118  00083D  1F                 	db	31
   119  00083E  1F                 	db	31
   120  00083F  1F                 	db	31
   121  000840  1F                 	db	31
   122  000841                     __end_of_animation:
   123                           	opt stack 0
   124  000841                     _init_str:
   125                           	opt stack 0
   126  000841  28                 	db	40
   127  000842  0C                 	db	12
   128  000843  01                 	db	1
   129  000844  06                 	db	6
   130  000845                     __end_of_init_str:
   131                           	opt stack 0
   132  000845                     lcd_status@animation:
   133                           	opt stack 0
   134  000845  00                 	db	0
   135  000846  00                 	db	0
   136  000847  00                 	db	0
   137  000848  00                 	db	0
   138  000849  00                 	db	0
   139  00084A  00                 	db	0
   140  00084B  00                 	db	0
   141  00084C  1F                 	db	31
   142  00084D  00                 	db	0
   143  00084E  00                 	db	0
   144  00084F  00                 	db	0
   145  000850  00                 	db	0
   146  000851  00                 	db	0
   147  000852  00                 	db	0
   148  000853  1F                 	db	31
   149  000854  1F                 	db	31
   150  000855  00                 	db	0
   151  000856  00                 	db	0
   152  000857  00                 	db	0
   153  000858  00                 	db	0
   154  000859  00                 	db	0
   155  00085A  1F                 	db	31
   156  00085B  1F                 	db	31
   157  00085C  1F                 	db	31
   158  00085D  00                 	db	0
   159  00085E  00                 	db	0
   160  00085F  00                 	db	0
   161  000860  00                 	db	0
   162  000861  1F                 	db	31
   163  000862  1F                 	db	31
   164  000863  1F                 	db	31
   165  000864  1F                 	db	31
   166  000865  00                 	db	0
   167  000866  00                 	db	0
   168  000867  00                 	db	0
   169  000868  1F                 	db	31
   170  000869  1F                 	db	31
   171  00086A  1F                 	db	31
   172  00086B  1F                 	db	31
   173  00086C  1F                 	db	31
   174  00086D  00                 	db	0
   175  00086E  00                 	db	0
   176  00086F  1F                 	db	31
   177  000870  1F                 	db	31
   178  000871  1F                 	db	31
   179  000872  1F                 	db	31
   180  000873  1F                 	db	31
   181  000874  1F                 	db	31
   182  000875  00                 	db	0
   183  000876  1F                 	db	31
   184  000877  1F                 	db	31
   185  000878  1F                 	db	31
   186  000879  1F                 	db	31
   187  00087A  1F                 	db	31
   188  00087B  1F                 	db	31
   189  00087C  1F                 	db	31
   190  00087D  1F                 	db	31
   191  00087E  1F                 	db	31
   192  00087F  1F                 	db	31
   193  000880  1F                 	db	31
   194  000881  1F                 	db	31
   195  000882  1F                 	db	31
   196  000883  1F                 	db	31
   197  000884  1F                 	db	31
   198  000885                     __end_oflcd_status@animation:
   199                           	opt stack 0
   200  0000                     _TRISCbits	set	3988
   201  0000                     _TRISD	set	3989
   202  0000                     _LATD	set	3980
   203  0000                     _LATCbits	set	3979
   204                           
   205                           ; #config settings
   206  000885  00                 	db	0	; dummy byte at the end
   207  0000                     
   208                           	psect	cinit
   209  000B20                     __pcinit:
   210                           	opt stack 0
   211  000B20                     start_initialization:
   212                           	opt stack 0
   213  000B20                     __initialization:
   214                           	opt stack 0
   215  000B20                     end_of_initialization:
   216                           	opt stack 0
   217  000B20                     __end_of__initialization:
   218                           	opt stack 0
   219  000B20  0E00               	movlw	low (__Lsmallconst shr (0+16))
   220  000B22  6EF8               	movwf	tblptru,c
   221  000B24  0E08               	movlw	high __Lsmallconst
   222  000B26  6EF7               	movwf	tblptrh,c
   223  000B28  0100               	movlb	0
   224  000B2A  EF24  F005         	goto	_main	;jump to C main() function
   225                           tblptru	equ	0xFF8
   226                           tblptrh	equ	0xFF7
   227                           
   228                           	psect	cstackCOMRAM
   229  000001                     __pcstackCOMRAM:
   230                           	opt stack 0
   231  000001                     send_nibble@data:
   232                           	opt stack 0
   233                           
   234                           ; 1 bytes @ 0x0
   235  000001                     	ds	1
   236  000002                     send_nibble@comand:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x1
   240  000002                     	ds	1
   241  000003                     send_nibble@i:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x2
   245  000003                     	ds	1
   246  000004                     send_byte@data:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x3
   250  000004                     	ds	1
   251  000005                     send_byte@comand:
   252                           	opt stack 0
   253                           
   254                           ; 1 bytes @ 0x4
   255  000005                     	ds	1
   256  000006                     ??_lcd_init:
   257  000006                     lcd_gotoxy@y:
   258                           	opt stack 0
   259  000006                     set_sgram_byte@ptr:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x5
   263  000006                     	ds	1
   264  000007                     lcd_gotoxy@x:
   265                           	opt stack 0
   266  000007                     lcd_init@i:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x6
   270  000007                     	ds	1
   271  000008                     set_sgram_byte@dir:
   272                           	opt stack 0
   273  000008                     _lcd_gotoxy$145:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x7
   277  000008                     	ds	1
   278  000009                     set_sgram_byte@i:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x8
   282  000009                     	ds	1
   283  00000A                     lcd_gotoxy@dir:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x9
   287  00000A                     	ds	1
   288  00000B                     _set_level$165:
   289                           	opt stack 0
   290                           
   291                           ; 2 bytes @ 0xA
   292  00000B                     	ds	2
   293  00000D                     _set_level$166:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0xC
   297  00000D                     	ds	2
   298  00000F                     _set_level$167:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0xE
   302  00000F                     	ds	2
   303  000011                     _set_level$168:
   304                           	opt stack 0
   305                           
   306                           ; 2 bytes @ 0x10
   307  000011                     	ds	2
   308  000013                     _set_level$169:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0x12
   312  000013                     	ds	2
   313  000015                     _set_level$170:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x14
   317  000015                     	ds	2
   318  000017                     set_level@level:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0x16
   322  000017                     	ds	1
   323  000018                     set_level@i:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x17
   327  000018                     	ds	1
   328  000019                     set_level@j:
   329                           	opt stack 0
   330                           
   331                           ; 1 bytes @ 0x18
   332  000019                     	ds	1
   333  00001A                     init_level@i:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0x19
   337  00001A                     	ds	1
   338  00001B                     ??_main:
   339                           
   340                           ; 1 bytes @ 0x1A
   341  00001B                     	ds	2
   342  00001D                     main@i:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x1C
   346  00001D                     	ds	1
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           
   350 ;;
   351 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   352 ;;
   353 ;; *************** function _main *****************
   354 ;; Defined at:
   355 ;;		line 5 in file "main.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;  i               1   28[COMRAM] unsigned char 
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   369 ;;      Params:         0       0       0       0       0       0       0       0       0
   370 ;;      Locals:         1       0       0       0       0       0       0       0       0
   371 ;;      Temps:          2       0       0       0       0       0       0       0       0
   372 ;;      Totals:         3       0       0       0       0       0       0       0       0
   373 ;;Total ram usage:        3 bytes
   374 ;; Hardware stack levels required when called:    5
   375 ;; This function calls:
   376 ;;		_init_level
   377 ;;		_lcd_init
   378 ;;		_set_level
   379 ;; This function is called by:
   380 ;;		Startup code after reset
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text0
   385  000A48                     __ptext0:
   386                           	opt stack 0
   387  000A48                     _main:
   388                           	opt stack 26
   389                           
   390                           ;main.c: 6: lcd_init();
   391                           
   392                           ;incstack = 0
   393  000A48  ECA9  F004         	call	_lcd_init	;wreg free
   394                           
   395                           ;main.c: 7: init_level();
   396  000A4C  EC3E  F005         	call	_init_level	;wreg free
   397  000A50                     
   398                           ;main.c: 9: for (byte i = 0; i < 16;_delay((unsigned long)((100)*(20000000/4000.0))), ++
      +                          i)
   399  000A50  0E00               	movlw	0
   400  000A52  6E1D               	movwf	main@i,c
   401  000A54                     l1082:
   402  000A54  0E0F               	movlw	15
   403  000A56  641D               	cpfsgt	main@i,c
   404  000A58  D001               	goto	l18
   405  000A5A  D7FA               	goto	l17
   406  000A5C                     l18:
   407                           
   408                           ;main.c: 10: set_level(i);
   409  000A5C  501D               	movf	main@i,w,c
   410  000A5E  EC43  F004         	call	_set_level
   411  000A62  0E03               	movlw	3
   412  000A64  6E1C               	movwf	(??_main+1)& (0+255),c
   413  000A66  0E8A               	movlw	138
   414  000A68  6E1B               	movwf	??_main& (0+255),c
   415  000A6A  0E56               	movlw	86
   416  000A6C                     u497:
   417  000A6C  2EE8               	decfsz	wreg,f,c
   418  000A6E  D7FE               	bra	u497
   419  000A70  2E1B               	decfsz	??_main& (0+255),f,c
   420  000A72  D7FC               	bra	u497
   421  000A74  2E1C               	decfsz	(??_main+1)& (0+255),f,c
   422  000A76  D7FA               	bra	u497
   423  000A78  2A1D               	incf	main@i,f,c
   424  000A7A  D7EC               	goto	l1082
   425  000A7C                     __end_of_main:
   426                           	opt stack 0
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           wreg	equ	0xFE8
   430                           
   431 ;; *************** function _lcd_init *****************
   432 ;; Defined at:
   433 ;;		line 27 in file "lcd.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;  i               1    6[COMRAM] unsigned char 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   447 ;;      Params:         0       0       0       0       0       0       0       0       0
   448 ;;      Locals:         1       0       0       0       0       0       0       0       0
   449 ;;      Temps:          1       0       0       0       0       0       0       0       0
   450 ;;      Totals:         2       0       0       0       0       0       0       0       0
   451 ;;Total ram usage:        2 bytes
   452 ;; Hardware stack levels used:    1
   453 ;; Hardware stack levels required when called:    2
   454 ;; This function calls:
   455 ;;		_send_byte
   456 ;;		_send_nibble
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text1
   463  000952                     __ptext1:
   464                           	opt stack 0
   465  000952                     _lcd_init:
   466                           	opt stack 28
   467                           
   468                           ;lcd.c: 28: byte i;
   469                           ;lcd.c: 29: TRISD = 0xF0;
   470                           
   471                           ;incstack = 0
   472  000952  0EF0               	movlw	240
   473  000954  6E95               	movwf	3989,c	;volatile
   474                           
   475                           ;lcd.c: 30: TRISCbits.RC0 = TRISCbits.RC1 = 0;
   476  000956  9294               	bcf	3988,1,c	;volatile
   477  000958  9094               	bcf	3988,0,c	;volatile
   478                           
   479                           ;lcd.c: 31: LATCbits.LC0 = LATCbits.LC1 = 0;
   480  00095A  928B               	bcf	3979,1,c	;volatile
   481  00095C  908B               	bcf	3979,0,c	;volatile
   482                           
   483                           ;lcd.c: 32: LATD = 0x0F & 0x00;
   484  00095E  0E00               	movlw	0
   485  000960  6E8C               	movwf	3980,c	;volatile
   486                           
   487                           ;lcd.c: 33: _delay((unsigned long)((15)*(20000000/4000.0)));
   488  000962  0E62               	movlw	98
   489  000964  6E06               	movwf	??_lcd_init& (0+255),c
   490  000966  0E66               	movlw	102
   491  000968                     u507:
   492  000968  2EE8               	decfsz	wreg,f,c
   493  00096A  D7FE               	bra	u507
   494  00096C  2E06               	decfsz	??_lcd_init& (0+255),f,c
   495  00096E  D7FC               	bra	u507
   496                           
   497                           ;lcd.c: 34: for (i = 0; i < 3;_delay((unsigned long)((5)*(20000000/4000.0))), ++i)
   498  000970  0E00               	movlw	0
   499  000972  6E07               	movwf	lcd_init@i,c
   500  000974                     l1032:
   501  000974  0E02               	movlw	2
   502  000976  6407               	cpfsgt	lcd_init@i,c
   503  000978  D001               	goto	l58
   504  00097A  D00F               	goto	u420
   505  00097C                     l58:
   506                           
   507                           ;lcd.c: 35: send_nibble(0,3);
   508  00097C  0E03               	movlw	3
   509  00097E  6E01               	movwf	send_nibble@data,c
   510  000980  0E00               	movlw	0
   511  000982  EC6C  F005         	call	_send_nibble
   512  000986  0E21               	movlw	33
   513  000988  6E06               	movwf	??_lcd_init& (0+255),c
   514  00098A  0E76               	movlw	118
   515  00098C                     u517:
   516  00098C  2EE8               	decfsz	wreg,f,c
   517  00098E  D7FE               	bra	u517
   518  000990  2E06               	decfsz	??_lcd_init& (0+255),f,c
   519  000992  D7FC               	bra	u517
   520  000994  D000               	nop2	
   521  000996  2A07               	incf	lcd_init@i,f,c
   522  000998  D7ED               	goto	l1032
   523  00099A                     u420:
   524                           
   525                           ;lcd.c: 36: send_nibble(0,2);
   526  00099A  0E02               	movlw	2
   527  00099C  6E01               	movwf	send_nibble@data,c
   528  00099E  0E00               	movlw	0
   529  0009A0  EC6C  F005         	call	_send_nibble
   530                           
   531                           ;lcd.c: 37: _delay((unsigned long)((5)*(20000000/4000.0)));
   532  0009A4  0E21               	movlw	33
   533  0009A6  6E06               	movwf	??_lcd_init& (0+255),c
   534  0009A8  0E76               	movlw	118
   535  0009AA                     u527:
   536  0009AA  2EE8               	decfsz	wreg,f,c
   537  0009AC  D7FE               	bra	u527
   538  0009AE  2E06               	decfsz	??_lcd_init& (0+255),f,c
   539  0009B0  D7FC               	bra	u527
   540  0009B2  D000               	nop2	
   541                           
   542                           ;lcd.c: 38: for (i = 0; i < 4; _delay((unsigned long)((5)*(20000000/4000.0))),++i)
   543  0009B4  0E00               	movlw	0
   544  0009B6  6E07               	movwf	lcd_init@i,c
   545  0009B8                     l1050:
   546  0009B8  0E03               	movlw	3
   547  0009BA  6407               	cpfsgt	lcd_init@i,c
   548  0009BC  D001               	goto	l60
   549  0009BE  D018               	goto	u440
   550  0009C0                     l60:
   551                           
   552                           ;lcd.c: 39: send_byte(0,init_str[i]);
   553  0009C0  5007               	movf	lcd_init@i,w,c
   554  0009C2  0D01               	mullw	1
   555  0009C4  0E41               	movlw	low _init_str
   556  0009C6  24F3               	addwf	prodl,w,c
   557  0009C8  6EF6               	movwf	tblptrl,c
   558  0009CA  0E08               	movlw	high _init_str
   559  0009CC  20F4               	addwfc	prodh,w,c
   560  0009CE  6EF7               	movwf	tblptrh,c
   561  0009D0                     	if	0	;There are less than 3 active tblptr bytes
   562  0009D0                     	endif
   563  0009D0  0008               	tblrd		*
   564  0009D2  CFF5 F004          	movff	tablat,send_byte@data
   565  0009D6  0E00               	movlw	0
   566  0009D8  EC83  F005         	call	_send_byte
   567  0009DC  0E21               	movlw	33
   568  0009DE  6E06               	movwf	??_lcd_init& (0+255),c
   569  0009E0  0E76               	movlw	118
   570  0009E2                     u537:
   571  0009E2  2EE8               	decfsz	wreg,f,c
   572  0009E4  D7FE               	bra	u537
   573  0009E6  2E06               	decfsz	??_lcd_init& (0+255),f,c
   574  0009E8  D7FC               	bra	u537
   575  0009EA  D000               	nop2	
   576  0009EC  2A07               	incf	lcd_init@i,f,c
   577  0009EE  D7E4               	goto	l1050
   578  0009F0                     u440:
   579                           
   580                           ;lcd.c: 40: _delay((unsigned long)((1)*(20000000/4000.0)));
   581  0009F0  0E07               	movlw	7
   582  0009F2  6E06               	movwf	??_lcd_init& (0+255),c
   583  0009F4  0E7D               	movlw	125
   584  0009F6                     u547:
   585  0009F6  2EE8               	decfsz	wreg,f,c
   586  0009F8  D7FE               	bra	u547
   587  0009FA  2E06               	decfsz	??_lcd_init& (0+255),f,c
   588  0009FC  D7FC               	bra	u547
   589  0009FE  F000               	nop	
   590  000A00  0012               	return		;funcret
   591  000A02                     __end_of_lcd_init:
   592                           	opt stack 0
   593                           tblptru	equ	0xFF8
   594                           tblptrh	equ	0xFF7
   595                           tblptrl	equ	0xFF6
   596                           tablat	equ	0xFF5
   597                           prodh	equ	0xFF4
   598                           prodl	equ	0xFF3
   599                           wreg	equ	0xFE8
   600                           
   601 ;; *************** function _init_level *****************
   602 ;; Defined at:
   603 ;;		line 13 in file "lcd_status.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;  i               1   25[COMRAM] unsigned char 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   617 ;;      Params:         0       0       0       0       0       0       0       0       0
   618 ;;      Locals:         1       0       0       0       0       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0       0       0       0       0
   620 ;;      Totals:         1       0       0       0       0       0       0       0       0
   621 ;;Total ram usage:        1 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:    4
   624 ;; This function calls:
   625 ;;		_set_level
   626 ;;		_set_sgram_byte
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text2
   633  000A7C                     __ptext2:
   634                           	opt stack 0
   635  000A7C                     _init_level:
   636                           	opt stack 26
   637                           
   638                           ;lcd_status.c: 14: for (byte i = 0; i < 8; ++i)
   639                           
   640                           ;incstack = 0
   641  000A7C  0E00               	movlw	0
   642  000A7E  6E1A               	movwf	init_level@i,c
   643  000A80                     l1066:
   644  000A80  0E07               	movlw	7
   645  000A82  641A               	cpfsgt	init_level@i,c
   646  000A84  D001               	goto	l106
   647  000A86  D00D               	goto	u460
   648  000A88                     l106:
   649                           
   650                           ;lcd_status.c: 15: set_sgram_byte(i,animation[i]);
   651  000A88  501A               	movf	init_level@i,w,c
   652  000A8A  0D08               	mullw	8
   653  000A8C  0E45               	movlw	low lcd_status@animation
   654  000A8E  24F3               	addwf	prodl,w,c
   655  000A90  6E06               	movwf	set_sgram_byte@ptr,c
   656  000A92  0E08               	movlw	high lcd_status@animation
   657  000A94  20F4               	addwfc	prodh,w,c
   658  000A96  6E07               	movwf	set_sgram_byte@ptr+1,c
   659  000A98  501A               	movf	init_level@i,w,c
   660  000A9A  EC01  F005         	call	_set_sgram_byte
   661  000A9E  2A1A               	incf	init_level@i,f,c
   662  000AA0  D7EF               	goto	l1066
   663  000AA2                     u460:
   664                           
   665                           ;lcd_status.c: 16: set_level(0);
   666  000AA2  0E00               	movlw	0
   667  000AA4  EC43  F004         	call	_set_level
   668  000AA8  0012               	return		;funcret
   669  000AAA                     __end_of_init_level:
   670                           	opt stack 0
   671                           tblptru	equ	0xFF8
   672                           tblptrh	equ	0xFF7
   673                           tblptrl	equ	0xFF6
   674                           tablat	equ	0xFF5
   675                           prodh	equ	0xFF4
   676                           prodl	equ	0xFF3
   677                           wreg	equ	0xFE8
   678                           
   679 ;; *************** function _set_sgram_byte *****************
   680 ;; Defined at:
   681 ;;		line 15 in file "lcd.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  dir             1    wreg     unsigned char 
   684 ;;  ptr             2    5[COMRAM] PTR unsigned char 
   685 ;;		 -> lcd_status@animation(64), 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  dir             1    7[COMRAM] unsigned char 
   688 ;;  i               1    8[COMRAM] unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   698 ;;      Params:         2       0       0       0       0       0       0       0       0
   699 ;;      Locals:         2       0       0       0       0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0
   701 ;;      Totals:         4       0       0       0       0       0       0       0       0
   702 ;;Total ram usage:        4 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; Hardware stack levels required when called:    2
   705 ;; This function calls:
   706 ;;		_send_byte
   707 ;; This function is called by:
   708 ;;		_init_level
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text3
   713  000A02                     __ptext3:
   714                           	opt stack 0
   715  000A02                     _set_sgram_byte:
   716                           	opt stack 27
   717                           
   718                           ;incstack = 0
   719                           ;set_sgram_byte@dir stored from wreg
   720  000A02  6E08               	movwf	set_sgram_byte@dir,c
   721                           
   722                           ;lcd.c: 16: dir <<= 3;
   723  000A04  90D8               	bcf	status,0,c
   724  000A06  3608               	rlcf	set_sgram_byte@dir,f,c
   725  000A08  90D8               	bcf	status,0,c
   726  000A0A  3608               	rlcf	set_sgram_byte@dir,f,c
   727  000A0C  90D8               	bcf	status,0,c
   728  000A0E  3608               	rlcf	set_sgram_byte@dir,f,c
   729                           
   730                           ;lcd.c: 17: dir &= 0x38;
   731  000A10  0E38               	movlw	56
   732  000A12  1608               	andwf	set_sgram_byte@dir,f,c
   733                           
   734                           ;lcd.c: 18: send_byte(0, 0x40 | dir);
   735  000A14  5008               	movf	set_sgram_byte@dir,w,c
   736  000A16  0940               	iorlw	64
   737  000A18  6E04               	movwf	send_byte@data,c
   738  000A1A  0E00               	movlw	0
   739  000A1C  EC83  F005         	call	_send_byte
   740                           
   741                           ;lcd.c: 19: for(byte i=0; i<8; i++)
   742  000A20  0E00               	movlw	0
   743  000A22  6E09               	movwf	set_sgram_byte@i,c
   744  000A24                     l1010:
   745  000A24  0E07               	movlw	7
   746  000A26  6409               	cpfsgt	set_sgram_byte@i,c
   747  000A28  D001               	goto	l46
   748  000A2A  0012               	return	
   749  000A2C                     l46:
   750                           
   751                           ;lcd.c: 20: send_byte(1, *ptr++);
   752  000A2C  C006  FFF6         	movff	set_sgram_byte@ptr,tblptrl
   753  000A30  C007  FFF7         	movff	set_sgram_byte@ptr+1,tblptrh
   754  000A34                     	if	0	;tblptru may be non-zero
   755  000A34                     	endif
   756  000A34                     	if	0	;tblptru may be non-zero
   757  000A34                     	endif
   758  000A34  0008               	tblrd		*
   759  000A36  CFF5 F004          	movff	tablat,send_byte@data
   760  000A3A  0E01               	movlw	1
   761  000A3C  EC83  F005         	call	_send_byte
   762  000A40  4A06               	infsnz	set_sgram_byte@ptr,f,c
   763  000A42  2A07               	incf	set_sgram_byte@ptr+1,f,c
   764  000A44  2A09               	incf	set_sgram_byte@i,f,c
   765  000A46  D7EE               	goto	l1010
   766  000A48                     __end_of_set_sgram_byte:
   767                           	opt stack 0
   768                           tblptru	equ	0xFF8
   769                           tblptrh	equ	0xFF7
   770                           tblptrl	equ	0xFF6
   771                           tablat	equ	0xFF5
   772                           prodh	equ	0xFF4
   773                           prodl	equ	0xFF3
   774                           wreg	equ	0xFE8
   775                           status	equ	0xFD8
   776                           
   777 ;; *************** function _set_level *****************
   778 ;; Defined at:
   779 ;;		line 5 in file "lcd_status.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;  level           1    wreg     unsigned char 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  level           1   22[COMRAM] unsigned char 
   784 ;;  j               1   24[COMRAM] unsigned char 
   785 ;;  i               1   23[COMRAM] unsigned char 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, status,2, status,0, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   795 ;;      Params:         0       0       0       0       0       0       0       0       0
   796 ;;      Locals:        15       0       0       0       0       0       0       0       0
   797 ;;      Temps:          0       0       0       0       0       0       0       0       0
   798 ;;      Totals:        15       0       0       0       0       0       0       0       0
   799 ;;Total ram usage:       15 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    3
   802 ;; This function calls:
   803 ;;		_lcd_gotoxy
   804 ;;		_send_byte
   805 ;; This function is called by:
   806 ;;		_main
   807 ;;		_init_level
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text4
   812  000886                     __ptext4:
   813                           	opt stack 0
   814  000886                     _set_level:
   815                           	opt stack 27
   816                           
   817                           ;incstack = 0
   818                           ;set_level@level stored from wreg
   819  000886  6E17               	movwf	set_level@level,c
   820                           
   821                           ;lcd_status.c: 6: for(byte i = 1;i<3;i++){
   822  000888  0E01               	movlw	1
   823  00088A  6E18               	movwf	set_level@i,c
   824  00088C                     l952:
   825  00088C  0E02               	movlw	2
   826  00088E  6418               	cpfsgt	set_level@i,c
   827  000890  D001               	goto	l75
   828  000892  0012               	return	
   829  000894                     l75:
   830                           
   831                           ;lcd_status.c: 7: lcd_gotoxy(1,i);
   832  000894  C018  F006         	movff	set_level@i,lcd_gotoxy@y
   833  000898  0E01               	movlw	1
   834  00089A  EC55  F005         	call	_lcd_gotoxy
   835                           
   836                           ;lcd_status.c: 8: for(byte j = 0;j<16 ;j++)
   837  00089E  0E00               	movlw	0
   838  0008A0  6E19               	movwf	set_level@j,c
   839  0008A2                     l960:
   840  0008A2  0E0F               	movlw	15
   841  0008A4  6419               	cpfsgt	set_level@j,c
   842  0008A6  D001               	goto	l77
   843  0008A8  D052               	goto	u370
   844  0008AA                     l77:
   845                           
   846                           ;lcd_status.c: 9: send_byte(1,i==1? (j<8? ' ' : j<=level? j-8: ' '):(j<8? (j<=level? j: 
      +                          ' '): (j<=level? 0x07: ' ')));
   847  0008AA  0418               	decf	set_level@i,w,c
   848  0008AC  B4D8               	btfsc	status,2,c
   849  0008AE  D029               	goto	l80
   850  0008B0  0E07               	movlw	7
   851  0008B2  6419               	cpfsgt	set_level@j,c
   852  0008B4  D011               	goto	l84
   853  0008B6  5019               	movf	set_level@j,w,c
   854  0008B8  5C17               	subwf	set_level@level,w,c
   855  0008BA  B0D8               	btfsc	status,0,c
   856  0008BC  D004               	goto	l88
   857  0008BE  0E00               	movlw	0
   858  0008C0  6E10               	movwf	_set_level$167+1,c
   859  0008C2  0E20               	movlw	32
   860  0008C4  D003               	goto	L1
   861  0008C6                     l88:
   862  0008C6  0E00               	movlw	0
   863  0008C8  6E10               	movwf	_set_level$167+1,c
   864  0008CA  0E07               	movlw	7
   865  0008CC                     L1:
   866  0008CC  6E0F               	movwf	_set_level$167,c
   867  0008CE  C00F  F00D         	movff	_set_level$167,_set_level$166
   868  0008D2  C010  F00E         	movff	_set_level$167+1,_set_level$166+1
   869  0008D6  D010               	goto	l86
   870  0008D8                     l84:
   871  0008D8  5019               	movf	set_level@j,w,c
   872  0008DA  5C17               	subwf	set_level@level,w,c
   873  0008DC  B0D8               	btfsc	status,0,c
   874  0008DE  D005               	goto	l92
   875  0008E0  0E00               	movlw	0
   876  0008E2  6E12               	movwf	_set_level$168+1,c
   877  0008E4  0E20               	movlw	32
   878  0008E6  6E11               	movwf	_set_level$168,c
   879  0008E8  D003               	goto	l94
   880  0008EA                     l92:
   881  0008EA  C019  F011         	movff	set_level@j,_set_level$168
   882  0008EE  6A12               	clrf	_set_level$168+1,c
   883  0008F0                     l94:
   884  0008F0  C011  F00D         	movff	_set_level$168,_set_level$166
   885  0008F4  C012  F00E         	movff	_set_level$168+1,_set_level$166+1
   886  0008F8                     l86:
   887  0008F8  C00D  F00B         	movff	_set_level$166,_set_level$165
   888  0008FC  C00E  F00C         	movff	_set_level$166+1,_set_level$165+1
   889  000900  D01F               	goto	l82
   890  000902                     l80:
   891  000902  0E07               	movlw	7
   892  000904  6419               	cpfsgt	set_level@j,c
   893  000906  D014               	goto	l96
   894  000908  5019               	movf	set_level@j,w,c
   895  00090A  5C17               	subwf	set_level@level,w,c
   896  00090C  B0D8               	btfsc	status,0,c
   897  00090E  D005               	goto	l100
   898  000910  0E00               	movlw	0
   899  000912  6E16               	movwf	_set_level$170+1,c
   900  000914  0E20               	movlw	32
   901  000916  6E15               	movwf	_set_level$170,c
   902  000918  D006               	goto	l102
   903  00091A                     l100:
   904  00091A  0EF8               	movlw	248
   905  00091C  2419               	addwf	set_level@j,w,c
   906  00091E  6E15               	movwf	_set_level$170,c
   907  000920  6A16               	clrf	_set_level$170+1,c
   908  000922  0EFF               	movlw	255
   909  000924  2216               	addwfc	_set_level$170+1,f,c
   910  000926                     l102:
   911  000926  C015  F013         	movff	_set_level$170,_set_level$169
   912  00092A  C016  F014         	movff	_set_level$170+1,_set_level$169+1
   913  00092E  D004               	goto	l98
   914  000930                     l96:
   915  000930  0E00               	movlw	0
   916  000932  6E14               	movwf	_set_level$169+1,c
   917  000934  0E20               	movlw	32
   918  000936  6E13               	movwf	_set_level$169,c
   919  000938                     l98:
   920  000938  C013  F00B         	movff	_set_level$169,_set_level$165
   921  00093C  C014  F00C         	movff	_set_level$169+1,_set_level$165+1
   922  000940                     l82:
   923  000940  C00B  F004         	movff	_set_level$165,send_byte@data
   924  000944  0E01               	movlw	1
   925  000946  EC83  F005         	call	_send_byte
   926  00094A  2A19               	incf	set_level@j,f,c
   927  00094C  D7AA               	goto	l960
   928  00094E                     u370:
   929  00094E  2A18               	incf	set_level@i,f,c
   930  000950  D79D               	goto	l952
   931  000952                     __end_of_set_level:
   932                           	opt stack 0
   933                           tblptru	equ	0xFF8
   934                           tblptrh	equ	0xFF7
   935                           tblptrl	equ	0xFF6
   936                           tablat	equ	0xFF5
   937                           prodh	equ	0xFF4
   938                           prodl	equ	0xFF3
   939                           wreg	equ	0xFE8
   940                           status	equ	0xFD8
   941                           
   942 ;; *************** function _lcd_gotoxy *****************
   943 ;; Defined at:
   944 ;;		line 22 in file "lcd.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  x               1    wreg     unsigned char 
   947 ;;  y               1    5[COMRAM] unsigned char 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  x               1    6[COMRAM] unsigned char 
   950 ;;  dir             1    9[COMRAM] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   960 ;;      Params:         1       0       0       0       0       0       0       0       0
   961 ;;      Locals:         4       0       0       0       0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0       0       0
   963 ;;      Totals:         5       0       0       0       0       0       0       0       0
   964 ;;Total ram usage:        5 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    2
   967 ;; This function calls:
   968 ;;		_send_byte
   969 ;; This function is called by:
   970 ;;		_set_level
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text5
   975  000AAA                     __ptext5:
   976                           	opt stack 0
   977  000AAA                     _lcd_gotoxy:
   978                           	opt stack 27
   979                           
   980                           ;incstack = 0
   981                           ;lcd_gotoxy@x stored from wreg
   982  000AAA  6E07               	movwf	lcd_gotoxy@x,c
   983                           
   984                           ;lcd.c: 23: byte dir = y!=1? 0x40:0;
   985  000AAC  0406               	decf	lcd_gotoxy@y,w,c
   986  000AAE  A4D8               	btfss	status,2,c
   987  000AB0  D004               	goto	l52
   988  000AB2  0E00               	movlw	0
   989  000AB4  6E09               	movwf	_lcd_gotoxy$145+1,c
   990  000AB6  0E00               	movlw	0
   991  000AB8  D003               	goto	L2
   992  000ABA                     l52:
   993  000ABA  0E00               	movlw	0
   994  000ABC  6E09               	movwf	_lcd_gotoxy$145+1,c
   995  000ABE  0E40               	movlw	64
   996  000AC0                     L2:
   997  000AC0  6E08               	movwf	_lcd_gotoxy$145,c
   998  000AC2  C008  F00A         	movff	_lcd_gotoxy$145,lcd_gotoxy@dir
   999                           
  1000                           ;lcd.c: 24: dir += x-1;
  1001  000AC6  0407               	decf	lcd_gotoxy@x,w,c
  1002  000AC8  260A               	addwf	lcd_gotoxy@dir,f,c
  1003                           
  1004                           ;lcd.c: 25: send_byte(0,0x80|dir);
  1005  000ACA  500A               	movf	lcd_gotoxy@dir,w,c
  1006  000ACC  0980               	iorlw	128
  1007  000ACE  6E04               	movwf	send_byte@data,c
  1008  000AD0  0E00               	movlw	0
  1009  000AD2  EC83  F005         	call	_send_byte
  1010  000AD6  0012               	return		;funcret
  1011  000AD8                     __end_of_lcd_gotoxy:
  1012                           	opt stack 0
  1013                           tblptru	equ	0xFF8
  1014                           tblptrh	equ	0xFF7
  1015                           tblptrl	equ	0xFF6
  1016                           tablat	equ	0xFF5
  1017                           prodh	equ	0xFF4
  1018                           prodl	equ	0xFF3
  1019                           wreg	equ	0xFE8
  1020                           status	equ	0xFD8
  1021                           
  1022 ;; *************** function _send_byte *****************
  1023 ;; Defined at:
  1024 ;;		line 11 in file "lcd.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  comand          1    wreg     unsigned char 
  1027 ;;  data            1    3[COMRAM] unsigned char 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  comand          1    4[COMRAM] unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1039 ;;      Params:         1       0       0       0       0       0       0       0       0
  1040 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1042 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1043 ;;Total ram usage:        2 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    1
  1046 ;; This function calls:
  1047 ;;		_send_nibble
  1048 ;; This function is called by:
  1049 ;;		_set_sgram_byte
  1050 ;;		_lcd_gotoxy
  1051 ;;		_lcd_init
  1052 ;;		_set_level
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text6
  1057  000B06                     __ptext6:
  1058                           	opt stack 0
  1059  000B06                     _send_byte:
  1060                           	opt stack 28
  1061                           
  1062                           ;incstack = 0
  1063                           ;send_byte@comand stored from wreg
  1064  000B06  6E05               	movwf	send_byte@comand,c
  1065                           
  1066                           ;lcd.c: 12: send_nibble(comand,data>>4);
  1067  000B08  3804               	swapf	send_byte@data,w,c
  1068  000B0A  0B0F               	andlw	15
  1069  000B0C  6E01               	movwf	send_nibble@data,c
  1070  000B0E  5005               	movf	send_byte@comand,w,c
  1071  000B10  EC6C  F005         	call	_send_nibble
  1072                           
  1073                           ;lcd.c: 13: send_nibble(comand,data);
  1074  000B14  C004  F001         	movff	send_byte@data,send_nibble@data
  1075  000B18  5005               	movf	send_byte@comand,w,c
  1076  000B1A  EC6C  F005         	call	_send_nibble
  1077  000B1E  0012               	return		;funcret
  1078  000B20                     __end_of_send_byte:
  1079                           	opt stack 0
  1080                           tblptru	equ	0xFF8
  1081                           tblptrh	equ	0xFF7
  1082                           tblptrl	equ	0xFF6
  1083                           tablat	equ	0xFF5
  1084                           prodh	equ	0xFF4
  1085                           prodl	equ	0xFF3
  1086                           wreg	equ	0xFE8
  1087                           status	equ	0xFD8
  1088                           
  1089 ;; *************** function _send_nibble *****************
  1090 ;; Defined at:
  1091 ;;		line 4 in file "lcd.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  comand          1    wreg     unsigned char 
  1094 ;;  data            1    0[COMRAM] unsigned char 
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;  comand          1    1[COMRAM] unsigned char 
  1097 ;;  i               1    2[COMRAM] unsigned char 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1107 ;;      Params:         1       0       0       0       0       0       0       0       0
  1108 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1110 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1111 ;;Total ram usage:        3 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; This function calls:
  1114 ;;		Nothing
  1115 ;; This function is called by:
  1116 ;;		_send_byte
  1117 ;;		_lcd_init
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text7
  1122  000AD8                     __ptext7:
  1123                           	opt stack 0
  1124  000AD8                     _send_nibble:
  1125                           	opt stack 28
  1126                           
  1127                           ;incstack = 0
  1128                           ;send_nibble@comand stored from wreg
  1129  000AD8  6E02               	movwf	send_nibble@comand,c
  1130                           
  1131                           ;lcd.c: 5: LATCbits.LC1 = comand; __nop();
  1132  000ADA  B002               	btfsc	send_nibble@comand,0,c
  1133  000ADC  D002               	bra	u255
  1134  000ADE  928B               	bcf	3979,1,c	;volatile
  1135  000AE0  D001               	bra	u256
  1136  000AE2                     u255:
  1137  000AE2  828B               	bsf	3979,1,c	;volatile
  1138  000AE4                     u256:
  1139  000AE4  F000               	nop	
  1140                           
  1141                           ;lcd.c: 6: LATCbits.LC0 = 1; __nop();
  1142  000AE6  808B               	bsf	3979,0,c	;volatile
  1143  000AE8  F000               	nop	
  1144                           
  1145                           ;lcd.c: 7: LATD = 0x0F & data; __nop();
  1146  000AEA  5001               	movf	send_nibble@data,w,c
  1147  000AEC  0B0F               	andlw	15
  1148  000AEE  6E8C               	movwf	3980,c	;volatile
  1149  000AF0  F000               	nop	
  1150                           
  1151                           ;lcd.c: 8: LATCbits.LC0 = 0;
  1152  000AF2  908B               	bcf	3979,0,c	;volatile
  1153                           
  1154                           ;lcd.c: 9: for(byte i=0;i<20;i++) __nop();
  1155  000AF4  0E00               	movlw	0
  1156  000AF6  6E03               	movwf	send_nibble@i,c
  1157  000AF8                     l928:
  1158  000AF8  0E13               	movlw	19
  1159  000AFA  6403               	cpfsgt	send_nibble@i,c
  1160  000AFC  D001               	goto	l38
  1161  000AFE  0012               	return	
  1162  000B00                     l38:
  1163  000B00  F000               	nop	
  1164  000B02  2A03               	incf	send_nibble@i,f,c
  1165  000B04  D7F9               	goto	l928
  1166  000B06                     __end_of_send_nibble:
  1167                           	opt stack 0
  1168                           tblptru	equ	0xFF8
  1169                           tblptrh	equ	0xFF7
  1170                           tblptrl	equ	0xFF6
  1171                           tablat	equ	0xFF5
  1172                           prodh	equ	0xFF4
  1173                           prodl	equ	0xFF3
  1174                           wreg	equ	0xFE8
  1175                           status	equ	0xFD8
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           prodh	equ	0xFF4
  1181                           prodl	equ	0xFF3
  1182                           wreg	equ	0xFE8
  1183                           status	equ	0xFD8
  1184                           
  1185                           	psect	rparam
  1186  0000                     tblptru	equ	0xFF8
  1187                           tblptrh	equ	0xFF7
  1188                           tblptrl	equ	0xFF6
  1189                           tablat	equ	0xFF5
  1190                           prodh	equ	0xFF4
  1191                           prodl	equ	0xFF3
  1192                           wreg	equ	0xFE8
  1193                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    132
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    set_sgram_byte@ptr	PTR unsigned char  size(2) Largest target is 64
		 -> lcd_status@animation(CODE[64]), 


Critical Paths under _main in COMRAM

    _main->_init_level
    _lcd_init->_send_byte
    _init_level->_set_level
    _set_sgram_byte->_send_byte
    _set_level->_lcd_gotoxy
    _lcd_gotoxy->_send_byte
    _send_byte->_send_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7343
                                             26 COMRAM     3     3      0
                         _init_level
                           _lcd_init
                          _set_level
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0    1370
                                              5 COMRAM     2     2      0
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _init_level                                           1     1      0    3513
                                             25 COMRAM     1     1      0
                          _set_level
                     _set_sgram_byte
 ---------------------------------------------------------------------------------
 (2) _set_sgram_byte                                       4     2      2    1031
                                              5 COMRAM     4     2      2
                          _send_byte
 ---------------------------------------------------------------------------------
 (1) _set_level                                           15    15      0    2392
                                             10 COMRAM    15    15      0
                         _lcd_gotoxy
                          _send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     4      1    1030
                                              5 COMRAM     5     4      1
                          _send_byte
 ---------------------------------------------------------------------------------
 (2) _send_byte                                            2     1      1     862
                                              3 COMRAM     2     1      1
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          3     2      1     394
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_level
     _set_level
       _lcd_gotoxy
         _send_byte
           _send_nibble
       _send_byte
         _send_nibble
     _set_sgram_byte
       _send_byte
         _send_nibble
   _lcd_init
     _send_byte
       _send_nibble
     _send_nibble
   _set_level
     _lcd_gotoxy
       _send_byte
         _send_nibble
     _send_byte
       _send_nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     1D      1D       1       30.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 30 22:10:15 2018

                         l17 0A50                           l18 0A5C                           l52 0ABA  
                         l60 09C0                           l38 0B00                           l46 0A2C  
                         l80 0902                           l82 0940                           l58 097C  
                         l75 0894                           l92 08EA                           l84 08D8  
                         l77 08AA                           l94 08F0                           l86 08F8  
                         l96 0930                           l88 08C6                           l98 0938  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                          l100 091A  
                        l102 0926                          l106 0A88                          l928 0AF8  
                        l960 08A2                          l952 088C                 __CFG_CPB$OFF 000000  
                        u420 099A                          u255 0AE2                          u256 0AE4  
                        u440 09F0                          u370 094E                 __CFG_CPD$OFF 000000  
                        u507 0968                          u460 0AA2                          u517 098C  
                        u527 09AA                          u537 09E2                          u547 09F6  
                        u497 0A6C                 __CFG_BOR$OFF 000000                          prod 000FF3  
                        wreg 000FE8                 __CFG_FOSC$HS 000000                  lcd_gotoxy@x 0007  
                lcd_gotoxy@y 0006                 __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000  
                       l1010 0A24                         l1032 0974                         l1050 09B8  
                       l1066 0A80                         l1082 0A54                         _LATD 000F8C  
                       _main 0A48                         prodh 000FF4                         prodl 000FF3  
                       start 0000                __CFG_IESO$OFF 000000  __end_oflcd_status@animation 0885  
              __CFG_MCLRE$ON 000000                 ___param_bank 000000                __CFG_PLLDIV$1 000000  
             __CFG_CCP2MX$ON 000000                        ?_main 0001                __CFG_USBDIV$1 000000  
                      _TRISD 000F95                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
            send_byte@comand 0005                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
             __CFG_EBTRB$OFF 000000                        main@i 001D                        tablat 000FF5  
            send_nibble@data 0001                        status 000FD8               __CFG_ICPRT$OFF 000000  
            __initialization 0B20                 __end_of_main 0A7C                lcd_gotoxy@dir 000A  
                     ??_main 001B                __activetblptr 000001                 ?_send_nibble 0001  
             __CFG_XINST$OFF 000000             __end_of_lcd_init 0A02               __CFG_STVREN$ON 000000  
           __end_of_init_str 0845                  init_level@i 001A                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
            set_sgram_byte@i 0009                   __accesstop 0060      __end_of__initialization 0B20  
            __CFG_PBADEN$OFF 000000                ___rparam_used 000001               __pcstackCOMRAM 0001  
    __size_of_set_sgram_byte 0046           __size_of_send_byte 001A           __size_of_set_level 00CC  
                 _lcd_gotoxy 0AAA                    ?_lcd_init 0001              __CFG_VREGEN$OFF 000000  
       __size_of_send_nibble 002E            __end_of_animation 0841                      __Hparam 0000  
                    __Lparam 0000                 __psmallconst 0800                   _init_level 0A7C  
                    __pcinit 0B20                      __ramtop 0800                      __ptext0 0A48  
                    __ptext1 0952                      __ptext2 0A7C                      __ptext3 0A02  
                    __ptext4 0886                      __ptext5 0AAA                      __ptext6 0B06  
                    __ptext7 0AD8                   ??_lcd_init 0006         end_of_initialization 0B20  
          __end_of_send_byte 0B20            __end_of_set_level 0952            send_nibble@comand 0002  
             set_level@level 0017                    _TRISCbits 000F94                  ?_lcd_gotoxy 0006  
              send_byte@data 0004               _set_sgram_byte 0A02                  ?_init_level 0001  
        start_initialization 0B20       __end_of_set_sgram_byte 0A48          __size_of_lcd_gotoxy 002E  
           __CFG_LPT1OSC$OFF 000000          lcd_status@animation 0845            __size_of_lcd_init 00B0  
        __size_of_init_level 002E              ?_set_sgram_byte 0006                    _animation 0801  
                __smallconst 0800                ??_send_nibble 0002                   set_level@i 0018  
                 set_level@j 0019                     _LATCbits 000F8B                    _send_byte 0B06  
              _set_level$170 0015                _set_level$165 000B                _set_level$166 000D  
              _set_level$167 000F                _set_level$168 0011                _set_level$169 0013  
                  _set_level 0886             __CFG_WDTPS$32768 000000                    lcd_init@i 0007  
               send_nibble@i 0003                 ??_lcd_gotoxy 0007          __end_of_send_nibble 0B06  
                 ?_send_byte 0004                     __Hrparam 0000                   ?_set_level 0001  
                   __Lrparam 0000                 __Lsmallconst 0800           __end_of_lcd_gotoxy 0AD8  
               ??_init_level 001A                     _lcd_init 0952                __size_of_main 0034  
                   _init_str 0841           __end_of_init_level 0AAA               _lcd_gotoxy$145 0008  
      __CFG_CPUDIV$OSC1_PLL2 000000                  _send_nibble 0AD8             ??_set_sgram_byte 0008  
                ??_send_byte 0005                  ??_set_level 000B            set_sgram_byte@dir 0008  
          set_sgram_byte@ptr 0006  
