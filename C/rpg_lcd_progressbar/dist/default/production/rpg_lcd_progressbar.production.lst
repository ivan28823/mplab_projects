

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue May 15 21:08:27 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           ; Version 1.45
    26                           ; Generated 16/11/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4550 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	smallconst
    61  0000'                    __psmallconst:
    62                           	opt stack 0
    63  0000' 00                 	db	0
    64  0001' 00                 	db	0
    65  0002' 00                 	db	0
    66  0003' 00                 	db	0
    67  0004' 00                 	db	0
    68  0005' 00                 	db	0
    69  0006' 00                 	db	0
    70  0007' 00                 	db	0
    71  0008' 1F                 	db	31
    72  0009' 00                 	db	0
    73  000A' 00                 	db	0
    74  000B' 00                 	db	0
    75  000C' 00                 	db	0
    76  000D' 00                 	db	0
    77  000E' 00                 	db	0
    78  000F' 1F                 	db	31
    79  0010' 1F                 	db	31
    80  0011' 00                 	db	0
    81  0012' 00                 	db	0
    82  0013' 00                 	db	0
    83  0014' 00                 	db	0
    84  0015' 00                 	db	0
    85  0016' 1F                 	db	31
    86  0017' 1F                 	db	31
    87  0018' 1F                 	db	31
    88  0019' 00                 	db	0
    89  001A' 00                 	db	0
    90  001B' 00                 	db	0
    91  001C' 00                 	db	0
    92  001D' 1F                 	db	31
    93  001E' 1F                 	db	31
    94  001F' 1F                 	db	31
    95  0020' 1F                 	db	31
    96  0021' 00                 	db	0
    97  0022' 00                 	db	0
    98  0023' 00                 	db	0
    99  0024' 1F                 	db	31
   100  0025' 1F                 	db	31
   101  0026' 1F                 	db	31
   102  0027' 1F                 	db	31
   103  0028' 1F                 	db	31
   104  0029' 00                 	db	0
   105  002A' 00                 	db	0
   106  002B' 1F                 	db	31
   107  002C' 1F                 	db	31
   108  002D' 1F                 	db	31
   109  002E' 1F                 	db	31
   110  002F' 1F                 	db	31
   111  0030' 1F                 	db	31
   112  0031' 00                 	db	0
   113  0032' 1F                 	db	31
   114  0033' 1F                 	db	31
   115  0034' 1F                 	db	31
   116  0035' 1F                 	db	31
   117  0036' 1F                 	db	31
   118  0037' 1F                 	db	31
   119  0038' 1F                 	db	31
   120  0039' 1F                 	db	31
   121  003A' 1F                 	db	31
   122  003B' 1F                 	db	31
   123  003C' 1F                 	db	31
   124  003D' 1F                 	db	31
   125  003E' 1F                 	db	31
   126  003F' 1F                 	db	31
   127  0040' 1F                 	db	31
   128  0041'                    __end_of_animation:
   129                           	opt stack 0
   130  0041'                    lcd@init_str:
   131                           	opt stack 0
   132  0041' 28                 	db	40
   133  0042' 0C                 	db	12
   134  0043' 01                 	db	1
   135  0044' 06                 	db	6
   136  0045'                    __end_oflcd@init_str:
   137                           	opt stack 0
   138  0045'                    lcd@init_str:
   139                           	opt stack 0
   140  0045' 28                 	db	40
   141  0046' 0C                 	db	12
   142  0047' 01                 	db	1
   143  0048' 06                 	db	6
   144  0049' 28                 	db	40
   145  004A' 0C                 	db	12
   146  004B' 01                 	db	1
   147  004C' 06                 	db	6
   148  004D'                    __end_of_init_str:
   149                           	opt stack 0
   150  004D'                    lcd_status@animation:
   151                           	opt stack 0
   152  004D' 00                 	db	0
   153  004E' 00                 	db	0
   154  004F' 00                 	db	0
   155  0050' 00                 	db	0
   156  0051' 00                 	db	0
   157  0052' 00                 	db	0
   158  0053' 00                 	db	0
   159  0054' 1F                 	db	31
   160  0055' 00                 	db	0
   161  0056' 00                 	db	0
   162  0057' 00                 	db	0
   163  0058' 00                 	db	0
   164  0059' 00                 	db	0
   165  005A' 00                 	db	0
   166  005B' 1F                 	db	31
   167  005C' 1F                 	db	31
   168  005D' 00                 	db	0
   169  005E' 00                 	db	0
   170  005F' 00                 	db	0
   171  0060' 00                 	db	0
   172  0061' 00                 	db	0
   173  0062' 1F                 	db	31
   174  0063' 1F                 	db	31
   175  0064' 1F                 	db	31
   176  0065' 00                 	db	0
   177  0066' 00                 	db	0
   178  0067' 00                 	db	0
   179  0068' 00                 	db	0
   180  0069' 1F                 	db	31
   181  006A' 1F                 	db	31
   182  006B' 1F                 	db	31
   183  006C' 1F                 	db	31
   184  006D' 00                 	db	0
   185  006E' 00                 	db	0
   186  006F' 00                 	db	0
   187  0070' 1F                 	db	31
   188  0071' 1F                 	db	31
   189  0072' 1F                 	db	31
   190  0073' 1F                 	db	31
   191  0074' 1F                 	db	31
   192  0075' 00                 	db	0
   193  0076' 00                 	db	0
   194  0077' 1F                 	db	31
   195  0078' 1F                 	db	31
   196  0079' 1F                 	db	31
   197  007A' 1F                 	db	31
   198  007B' 1F                 	db	31
   199  007C' 1F                 	db	31
   200  007D' 00                 	db	0
   201  007E' 1F                 	db	31
   202  007F' 1F                 	db	31
   203  0080' 1F                 	db	31
   204  0081' 1F                 	db	31
   205  0082' 1F                 	db	31
   206  0083' 1F                 	db	31
   207  0084' 1F                 	db	31
   208  0085' 1F                 	db	31
   209  0086' 1F                 	db	31
   210  0087' 1F                 	db	31
   211  0088' 1F                 	db	31
   212  0089' 1F                 	db	31
   213  008A' 1F                 	db	31
   214  008B' 1F                 	db	31
   215  008C' 1F                 	db	31
   216  008D'                    __end_oflcd_status@animation:
   217                           	opt stack 0
   218  008D' 00                 	db	0	; dummy byte at the end
   219  0000                     
   220                           	psect	nvCOMRAM
   221  0000'                    __pnvCOMRAM:
   222                           	opt stack 0
   223  0000'                    _hhhh:
   224                           	opt stack 0
   225  0000'                    	ds	3
   226  0000                     _TRISCbits	set	3988
   227  0000                     _TRISD	set	3989
   228  0000                     _LATD	set	3980
   229  0000                     _LATCbits	set	3979
   230  0000                     _RCONbits	set	4048
   231  0000                     _INTCON3bits	set	4080
   232  0000                     _TRISB	set	3987
   233  0000                     _LATB	set	3978
   234  0000                     _PORTBbits	set	3969
   235  0000                     _INTCON2bits	set	4081
   236  0000                     _INTCONbits	set	4082
   237                           
   238                           ; #config settings
   239  0000                     
   240                           	psect	cinit
   241  0000'                    __pcinit:
   242                           	opt stack 0
   243  0000'                    start_initialization:
   244                           	opt stack 0
   245  0000'                    __initialization:
   246                           	opt stack 0
   247                           
   248                           ; Clear objects allocated to COMRAM (3 bytes)
   249  0000' 6A00'              	clrf	(__pbssCOMRAM+2)& (0+255),c
   250  0002' 6A00'              	clrf	(__pbssCOMRAM+1)& (0+255),c
   251  0004' 6A00'              	clrf	__pbssCOMRAM& (0+255),c
   252  0006'                    end_of_initialization:
   253                           	opt stack 0
   254  0006'                    __end_of__initialization:
   255                           	opt stack 0
   256  0006' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   257  0008' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   258  000A' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   259  000C' 6EF8               	movwf	tblptru,c
   260  000E' 0100               	movlb	0
   261  0010' EF00' F000'        	goto	_main	;jump to C main() function
   262                           tblptru	equ	0xFF8
   263                           
   264                           	psect	bssCOMRAM
   265  0000'                    __pbssCOMRAM:
   266                           	opt stack 0
   267  0000'                    _Nstep:
   268                           	opt stack 0
   269  0000'                    	ds	1
   270  0001'                    _level:
   271                           	opt stack 0
   272  0001'                    	ds	1
   273  0002'                    _flag:
   274                           	opt stack 0
   275  0002'                    	ds	1
   276                           tblptru	equ	0xFF8
   277                           
   278                           	psect	cstackCOMRAM
   279  0000'                    __pcstackCOMRAM:
   280                           	opt stack 0
   281  0000'                    ??_ext0:
   282  0000'                    
   283                           ; 1 bytes @ 0x0
   284  0000'                    	ds	19
   285  0013'                    send_nibble@data:
   286                           	opt stack 0
   287                           
   288                           ; 1 bytes @ 0x13
   289  0013'                    	ds	1
   290  0014'                    send_nibble@comand:
   291                           	opt stack 0
   292                           
   293                           ; 1 bytes @ 0x14
   294  0014'                    	ds	1
   295  0015'                    send_nibble@i:
   296                           	opt stack 0
   297                           
   298                           ; 1 bytes @ 0x15
   299  0015'                    	ds	1
   300  0016'                    send_byte@data:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0x16
   304  0016'                    	ds	1
   305  0017'                    send_byte@comand:
   306                           	opt stack 0
   307                           
   308                           ; 1 bytes @ 0x17
   309  0017'                    	ds	1
   310  0018'                    ??_lcd_init:
   311  0018'                    lcd_gotoxy@y:
   312                           	opt stack 0
   313  0018'                    set_sgram_byte@ptr:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x18
   317  0018'                    	ds	1
   318  0019'                    lcd_gotoxy@x:
   319                           	opt stack 0
   320  0019'                    lcd_init@i:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x19
   324  0019'                    	ds	1
   325  001A'                    set_sgram_byte@dir:
   326                           	opt stack 0
   327  001A'                    _lcd_gotoxy$455:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x1A
   331  001A'                    	ds	1
   332  001B'                    set_sgram_byte@i:
   333                           	opt stack 0
   334                           
   335                           ; 1 bytes @ 0x1B
   336  001B'                    	ds	1
   337  001C'                    lcd_gotoxy@dir:
   338                           	opt stack 0
   339                           
   340                           ; 1 bytes @ 0x1C
   341  001C'                    	ds	1
   342  001D'                    _set_level$477:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x1D
   346  001D'                    	ds	2
   347  001F'                    _set_level$478:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x1F
   351  001F'                    	ds	2
   352  0021'                    _set_level$479:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x21
   356  0021'                    	ds	2
   357  0023'                    _set_level$480:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x23
   361  0023'                    	ds	2
   362  0025'                    _set_level$481:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x25
   366  0025'                    	ds	2
   367  0027'                    _set_level$482:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x27
   371  0027'                    	ds	2
   372  0029'                    set_level@level:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x29
   376  0029'                    	ds	1
   377  002A'                    set_level@i:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x2A
   381  002A'                    	ds	1
   382  002B'                    set_level@j:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x2B
   386  002B'                    	ds	1
   387  002C'                    init_level@i:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x2C
   391  002C'                    	ds	1
   392  002D'                    ??_setup:
   393                           
   394                           ; 1 bytes @ 0x2D
   395  002D'                    	ds	2
   396  002F'                    ??_main:
   397                           
   398                           ; 1 bytes @ 0x2F
   399  002F'                    	ds	2
   400                           tblptru	equ	0xFF8
   401                           
   402 ;;
   403 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   404 ;;
   405 ;; *************** function _main *****************
   406 ;; Defined at:
   407 ;;		line 44 in file "main.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   421 ;;      Params:         0       0       0       0       0       0       0       0       0
   422 ;;      Locals:         0       0       0       0       0       0       0       0       0
   423 ;;      Temps:          2       0       0       0       0       0       0       0       0
   424 ;;      Totals:         2       0       0       0       0       0       0       0       0
   425 ;;Total ram usage:        2 bytes
   426 ;; Hardware stack levels required when called:    7
   427 ;; This function calls:
   428 ;;		_set_level
   429 ;;		_setup
   430 ;; This function is called by:
   431 ;;		Startup code after reset
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           	psect	text0
   436  0000'                    __ptext0:
   437                           	opt stack 0
   438  0000'                    _main:
   439                           	opt stack 24
   440                           
   441                           ;main.c: 45: hhhh = 2.5/3.1416;
   442                           
   443                           ;incstack = 0
   444  0000' 0EB8               	movlw	184
   445  0002' 6E00'              	movwf	_hhhh,c
   446  0004' 0E4B               	movlw	75
   447  0006' 6E01'              	movwf	_hhhh+1,c
   448  0008' 0E3F               	movlw	63
   449  000A' 6E02'              	movwf	_hhhh+2,c
   450                           
   451                           ;main.c: 46: setup();
   452  000C' EC00' F000'        	call	_setup	;wreg free
   453  0010'                    
   454                           ;main.c: 48: if(flag){
   455  0010' 5002'              	movf	_flag,w,c
   456  0012' B4D8               	btfsc	status,2,c
   457  0014' D7FD               	goto	l52
   458                           
   459                           ;main.c: 49: flag = 0;
   460  0016' 0E00               	movlw	0
   461  0018' 6E02'              	movwf	_flag,c
   462                           
   463                           ;main.c: 50: LATB = level << 4;
   464  001A' 3801'              	swapf	_level,w,c
   465  001C' 0BF0               	andlw	240
   466  001E' 6E8A               	movwf	3978,c	;volatile
   467                           
   468                           ;main.c: 51: set_level(level);
   469  0020' 5001'              	movf	_level,w,c
   470  0022' EC00' F000'        	call	_set_level
   471                           
   472                           ;main.c: 52: _delay((unsigned long)((250)*(20000000/4000.0)));
   473  0026' 0E07               	movlw	7
   474  0028' 6E00'              	movwf	(??_main+1)& (0+255),c
   475  002A' 0E58               	movlw	88
   476  002C' 6E00'              	movwf	??_main& (0+255),c
   477  002E' 0E5A               	movlw	90
   478  0030'                    u577:
   479  0030' 2EE8               	decfsz	wreg,f,c
   480  0032' D7FE               	bra	u577
   481  0034' 2E00'              	decfsz	??_main& (0+255),f,c
   482  0036' D7FC               	bra	u577
   483  0038' 2E00'              	decfsz	(??_main+1)& (0+255),f,c
   484  003A' D7FA               	bra	u577
   485                           
   486                           ;main.c: 53: }
   487                           ;main.c: 54: }
   488  003C' D7E9               	goto	l52
   489  003E'                    __end_of_main:
   490                           	opt stack 0
   491                           tblptru	equ	0xFF8
   492                           wreg	equ	0xFE8
   493                           status	equ	0xFD8
   494                           
   495 ;; *************** function _setup *****************
   496 ;; Defined at:
   497 ;;		line 57 in file "main.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   511 ;;      Params:         0       0       0       0       0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0       0       0       0       0
   513 ;;      Temps:          2       0       0       0       0       0       0       0       0
   514 ;;      Totals:         2       0       0       0       0       0       0       0       0
   515 ;;Total ram usage:        2 bytes
   516 ;; Hardware stack levels used:    1
   517 ;; Hardware stack levels required when called:    6
   518 ;; This function calls:
   519 ;;		_init_level
   520 ;;		_lcd_init
   521 ;; This function is called by:
   522 ;;		_main
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text1
   527  0000'                    __ptext1:
   528                           	opt stack 0
   529  0000'                    _setup:
   530                           	opt stack 24
   531                           
   532                           ;main.c: 58: INTCONbits.GIEH=0;
   533                           
   534                           ;incstack = 0
   535  0000' 9EF2               	bcf	intcon,7,c	;volatile
   536                           
   537                           ;main.c: 60: TRISB = 0x0F;
   538  0002' 0E0F               	movlw	15
   539  0004' 6E93               	movwf	3987,c	;volatile
   540                           
   541                           ;main.c: 61: LATB = 0;
   542  0006' 0E00               	movlw	0
   543  0008' 6E8A               	movwf	3978,c	;volatile
   544                           
   545                           ;main.c: 63: INTCONbits.INT0IF = 0;
   546  000A' 92F2               	bcf	intcon,1,c	;volatile
   547                           
   548                           ;main.c: 64: INTCONbits.INT0IE = 1;
   549  000C' 88F2               	bsf	intcon,4,c	;volatile
   550                           
   551                           ;main.c: 66: INTCON2bits.INTEDG0 = 0;
   552  000E' 9CF1               	bcf	intcon2,6,c	;volatile
   553                           
   554                           ;main.c: 68: INTCON3bits.INT1IF = 0;
   555  0010' 90F0               	bcf	intcon3,0,c	;volatile
   556                           
   557                           ;main.c: 69: INTCON3bits.INT1IE = 0;
   558  0012' 96F0               	bcf	intcon3,3,c	;volatile
   559                           
   560                           ;main.c: 70: INTCON3bits.INT1IP = 1;
   561  0014' 8CF0               	bsf	intcon3,6,c	;volatile
   562                           
   563                           ;main.c: 72: INTCON2bits.INTEDG2 = 1;
   564  0016' 88F1               	bsf	intcon2,4,c	;volatile
   565                           
   566                           ;main.c: 74: RCONbits.IPEN = 1;
   567  0018' 8ED0               	bsf	4048,7,c	;volatile
   568                           
   569                           ;main.c: 76: lcd_init();
   570  001A' EC00' F000'        	call	_lcd_init	;wreg free
   571                           
   572                           ;main.c: 77: init_level();
   573  001E' EC00' F000'        	call	_init_level	;wreg free
   574                           
   575                           ;main.c: 78: _delay((unsigned long)((100)*(20000000/4000.0)));
   576  0022' 0E03               	movlw	3
   577  0024' 6E00'              	movwf	(??_setup+1)& (0+255),c
   578  0026' 0E8A               	movlw	138
   579  0028' 6E00'              	movwf	??_setup& (0+255),c
   580  002A' 0E56               	movlw	86
   581  002C'                    u587:
   582  002C' 2EE8               	decfsz	wreg,f,c
   583  002E' D7FE               	bra	u587
   584  0030' 2E00'              	decfsz	??_setup& (0+255),f,c
   585  0032' D7FC               	bra	u587
   586  0034' 2E00'              	decfsz	(??_setup+1)& (0+255),f,c
   587  0036' D7FA               	bra	u587
   588                           
   589                           ;main.c: 79: INTCONbits.GIEL = 0;
   590  0038' 9CF2               	bcf	intcon,6,c	;volatile
   591                           
   592                           ;main.c: 80: INTCONbits.GIEH = 1;
   593  003A' 8EF2               	bsf	intcon,7,c	;volatile
   594  003C' 0012               	return		;funcret
   595  003E'                    __end_of_setup:
   596                           	opt stack 0
   597                           tblptru	equ	0xFF8
   598                           intcon	equ	0xFF2
   599                           intcon2	equ	0xFF1
   600                           intcon3	equ	0xFF0
   601                           wreg	equ	0xFE8
   602                           status	equ	0xFD8
   603                           
   604 ;; *************** function _lcd_init *****************
   605 ;; Defined at:
   606 ;;		line 32 in file "lcd.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;  i               1   25[COMRAM] unsigned char 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   620 ;;      Params:         0       0       0       0       0       0       0       0       0
   621 ;;      Locals:         1       0       0       0       0       0       0       0       0
   622 ;;      Temps:          1       0       0       0       0       0       0       0       0
   623 ;;      Totals:         2       0       0       0       0       0       0       0       0
   624 ;;Total ram usage:        2 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; Hardware stack levels required when called:    3
   627 ;; This function calls:
   628 ;;		_send_byte
   629 ;;		_send_nibble
   630 ;; This function is called by:
   631 ;;		_setup
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text2
   636  0000'                    __ptext2:
   637                           	opt stack 0
   638  0000'                    _lcd_init:
   639                           	opt stack 26
   640                           
   641                           ;lcd.c: 33: byte i;
   642                           ;lcd.c: 34: TRISD = 0xF0;
   643                           
   644                           ;incstack = 0
   645  0000' 0EF0               	movlw	240
   646  0002' 6E95               	movwf	3989,c	;volatile
   647                           
   648                           ;lcd.c: 35: TRISCbits.RC0 = TRISCbits.RC1 = 0;
   649  0004' 9294               	bcf	3988,1,c	;volatile
   650  0006' 9094               	bcf	3988,0,c	;volatile
   651                           
   652                           ;lcd.c: 36: LATCbits.LC0 = LATCbits.LC1 = 0;
   653  0008' 928B               	bcf	3979,1,c	;volatile
   654  000A' 908B               	bcf	3979,0,c	;volatile
   655                           
   656                           ;lcd.c: 37: LATD = 0x0F & 0x00;
   657  000C' 0E00               	movlw	0
   658  000E' 6E8C               	movwf	3980,c	;volatile
   659                           
   660                           ;lcd.c: 38: _delay((unsigned long)((15)*(20000000/4000.0)));
   661  0010' 0E62               	movlw	98
   662  0012' 6E00'              	movwf	??_lcd_init& (0+255),c
   663  0014' 0E66               	movlw	102
   664  0016'                    u597:
   665  0016' 2EE8               	decfsz	wreg,f,c
   666  0018' D7FE               	bra	u597
   667  001A' 2E00'              	decfsz	??_lcd_init& (0+255),f,c
   668  001C' D7FC               	bra	u597
   669                           
   670                           ;lcd.c: 39: for (i = 0; i < 3;_delay((unsigned long)((5)*(20000000/4000.0))), ++i)
   671  001E' 0E00               	movlw	0
   672  0020' 6E19'              	movwf	lcd_init@i,c
   673  0022'                    l1151:
   674  0022' 0E02               	movlw	2
   675  0024' 6419'              	cpfsgt	lcd_init@i,c
   676  0026' D001               	goto	l95
   677  0028' D00F               	goto	u510
   678  002A'                    l95:
   679                           
   680                           ;lcd.c: 40: send_nibble(0,3);
   681  002A' 0E03               	movlw	3
   682  002C' 6E13'              	movwf	send_nibble@data,c
   683  002E' 0E00               	movlw	0
   684  0030' EC00' F000'        	call	_send_nibble
   685  0034' 0E21               	movlw	33
   686  0036' 6E00'              	movwf	??_lcd_init& (0+255),c
   687  0038' 0E76               	movlw	118
   688  003A'                    u607:
   689  003A' 2EE8               	decfsz	wreg,f,c
   690  003C' D7FE               	bra	u607
   691  003E' 2E00'              	decfsz	??_lcd_init& (0+255),f,c
   692  0040' D7FC               	bra	u607
   693  0042' D000               	nop2	
   694  0044' 2A19'              	incf	lcd_init@i,f,c
   695  0046' D7ED               	goto	l1151
   696  0048'                    u510:
   697                           
   698                           ;lcd.c: 41: send_nibble(0,2);
   699  0048' 0E02               	movlw	2
   700  004A' 6E13'              	movwf	send_nibble@data,c
   701  004C' 0E00               	movlw	0
   702  004E' EC00' F000'        	call	_send_nibble
   703                           
   704                           ;lcd.c: 42: _delay((unsigned long)((5)*(20000000/4000.0)));
   705  0052' 0E21               	movlw	33
   706  0054' 6E00'              	movwf	??_lcd_init& (0+255),c
   707  0056' 0E76               	movlw	118
   708  0058'                    u617:
   709  0058' 2EE8               	decfsz	wreg,f,c
   710  005A' D7FE               	bra	u617
   711  005C' 2E00'              	decfsz	??_lcd_init& (0+255),f,c
   712  005E' D7FC               	bra	u617
   713  0060' D000               	nop2	
   714                           
   715                           ;lcd.c: 43: for (i = 0; i < 4; _delay((unsigned long)((5)*(20000000/4000.0))),++i)
   716  0062' 0E00               	movlw	0
   717  0064' 6E19'              	movwf	lcd_init@i,c
   718  0066'                    l1169:
   719  0066' 0E03               	movlw	3
   720  0068' 6419'              	cpfsgt	lcd_init@i,c
   721  006A' D001               	goto	l97
   722  006C' D018               	goto	u530
   723  006E'                    l97:
   724                           
   725                           ;lcd.c: 44: send_byte(0,init_str[i]);
   726  006E' 5019'              	movf	lcd_init@i,w,c
   727  0070' 0D01               	mullw	1
   728  0072' 0E00'              	movlw	low lcd@init_str
   729  0074' 24F3               	addwf	prodl,w,c
   730  0076' 6EF6               	movwf	tblptrl,c
   731  0078' 0E00'              	movlw	high lcd@init_str
   732  007A' 20F4               	addwfc	prodh,w,c
   733  007C' 6EF7               	movwf	tblptrh,c
   734  007E'                    	if	0	;There are less than 3 active tblptr bytes
   735  007E'                    	endif
   736  007E' 0008               	tblrd		*
   737  0080' CFF5 F016'         	movff	tablat,send_byte@data
   738  0084' 0E00               	movlw	0
   739  0086' EC00' F000'        	call	_send_byte
   740  008A' 0E21               	movlw	33
   741  008C' 6E00'              	movwf	??_lcd_init& (0+255),c
   742  008E' 0E76               	movlw	118
   743  0090'                    u627:
   744  0090' 2EE8               	decfsz	wreg,f,c
   745  0092' D7FE               	bra	u627
   746  0094' 2E00'              	decfsz	??_lcd_init& (0+255),f,c
   747  0096' D7FC               	bra	u627
   748  0098' D000               	nop2	
   749  009A' 2A19'              	incf	lcd_init@i,f,c
   750  009C' D7E4               	goto	l1169
   751  009E'                    u530:
   752                           
   753                           ;lcd.c: 45: _delay((unsigned long)((1)*(20000000/4000.0)));
   754  009E' 0E07               	movlw	7
   755  00A0' 6E00'              	movwf	??_lcd_init& (0+255),c
   756  00A2' 0E7D               	movlw	125
   757  00A4'                    u637:
   758  00A4' 2EE8               	decfsz	wreg,f,c
   759  00A6' D7FE               	bra	u637
   760  00A8' 2E00'              	decfsz	??_lcd_init& (0+255),f,c
   761  00AA' D7FC               	bra	u637
   762  00AC' F000               	nop	
   763  00AE' 0012               	return		;funcret
   764  00B0'                    __end_of_lcd_init:
   765                           	opt stack 0
   766                           tblptru	equ	0xFF8
   767                           tblptrh	equ	0xFF7
   768                           tblptrl	equ	0xFF6
   769                           tablat	equ	0xFF5
   770                           prodh	equ	0xFF4
   771                           prodl	equ	0xFF3
   772                           intcon	equ	0xFF2
   773                           intcon2	equ	0xFF1
   774                           intcon3	equ	0xFF0
   775                           wreg	equ	0xFE8
   776                           status	equ	0xFD8
   777                           
   778 ;; *************** function _init_level *****************
   779 ;; Defined at:
   780 ;;		line 14 in file "lcd_status.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  i               1   44[COMRAM] unsigned char 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   794 ;;      Params:         0       0       0       0       0       0       0       0       0
   795 ;;      Locals:         1       0       0       0       0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0       0       0       0       0
   797 ;;      Totals:         1       0       0       0       0       0       0       0       0
   798 ;;Total ram usage:        1 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    5
   801 ;; This function calls:
   802 ;;		_set_level
   803 ;;		_set_sgram_byte
   804 ;; This function is called by:
   805 ;;		_setup
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text3
   810  0000'                    __ptext3:
   811                           	opt stack 0
   812  0000'                    _init_level:
   813                           	opt stack 24
   814                           
   815                           ;lcd_status.c: 15: for (char i = 0; i < 8; ++i)
   816                           
   817                           ;incstack = 0
   818  0000' 0E00               	movlw	0
   819  0002' 6E2C'              	movwf	init_level@i,c
   820  0004'                    l1185:
   821  0004' 0E07               	movlw	7
   822  0006' 642C'              	cpfsgt	init_level@i,c
   823  0008' D001               	goto	l153
   824  000A' D00D               	goto	u550
   825  000C'                    l153:
   826                           
   827                           ;lcd_status.c: 16: set_sgram_byte(i,*(animation + i));
   828  000C' 502C'              	movf	init_level@i,w,c
   829  000E' 0D08               	mullw	8
   830  0010' 0E00'              	movlw	low lcd_status@animation
   831  0012' 24F3               	addwf	prodl,w,c
   832  0014' 6E18'              	movwf	set_sgram_byte@ptr,c
   833  0016' 0E00'              	movlw	high lcd_status@animation
   834  0018' 20F4               	addwfc	prodh,w,c
   835  001A' 6E19'              	movwf	set_sgram_byte@ptr+1,c
   836  001C' 502C'              	movf	init_level@i,w,c
   837  001E' EC00' F000'        	call	_set_sgram_byte
   838  0022' 2A2C'              	incf	init_level@i,f,c
   839  0024' D7EF               	goto	l1185
   840  0026'                    u550:
   841                           
   842                           ;lcd_status.c: 17: set_level(0);
   843  0026' 0E00               	movlw	0
   844  0028' EC00' F000'        	call	_set_level
   845  002C' 0012               	return		;funcret
   846  002E'                    __end_of_init_level:
   847                           	opt stack 0
   848                           tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           prodh	equ	0xFF4
   853                           prodl	equ	0xFF3
   854                           intcon	equ	0xFF2
   855                           intcon2	equ	0xFF1
   856                           intcon3	equ	0xFF0
   857                           wreg	equ	0xFE8
   858                           status	equ	0xFD8
   859                           
   860 ;; *************** function _set_sgram_byte *****************
   861 ;; Defined at:
   862 ;;		line 20 in file "lcd.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  dir             1    wreg     unsigned char 
   865 ;;  ptr             2   24[COMRAM] PTR unsigned char 
   866 ;;		 -> lcd_status@animation(64), 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  dir             1   26[COMRAM] unsigned char 
   869 ;;  i               1   27[COMRAM] unsigned char 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   879 ;;      Params:         2       0       0       0       0       0       0       0       0
   880 ;;      Locals:         2       0       0       0       0       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0       0       0       0       0
   882 ;;      Totals:         4       0       0       0       0       0       0       0       0
   883 ;;Total ram usage:        4 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    3
   886 ;; This function calls:
   887 ;;		_send_byte
   888 ;; This function is called by:
   889 ;;		_init_level
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text4
   894  0000'                    __ptext4:
   895                           	opt stack 0
   896  0000'                    _set_sgram_byte:
   897                           	opt stack 25
   898                           
   899                           ;incstack = 0
   900                           ;set_sgram_byte@dir stored from wreg
   901  0000' 6E1A'              	movwf	set_sgram_byte@dir,c
   902                           
   903                           ;lcd.c: 21: dir <<= 3;
   904  0002' 90D8               	bcf	status,0,c
   905  0004' 361A'              	rlcf	set_sgram_byte@dir,f,c
   906  0006' 90D8               	bcf	status,0,c
   907  0008' 361A'              	rlcf	set_sgram_byte@dir,f,c
   908  000A' 90D8               	bcf	status,0,c
   909  000C' 361A'              	rlcf	set_sgram_byte@dir,f,c
   910                           
   911                           ;lcd.c: 22: dir &= 0x38;
   912  000E' 0E38               	movlw	56
   913  0010' 161A'              	andwf	set_sgram_byte@dir,f,c
   914                           
   915                           ;lcd.c: 23: send_byte(0, 0x40 | dir);
   916  0012' 501A'              	movf	set_sgram_byte@dir,w,c
   917  0014' 0940               	iorlw	64
   918  0016' 6E16'              	movwf	send_byte@data,c
   919  0018' 0E00               	movlw	0
   920  001A' EC00' F000'        	call	_send_byte
   921                           
   922                           ;lcd.c: 24: for(byte i=0; i<8; i++)
   923  001E' 0E00               	movlw	0
   924  0020' 6E1B'              	movwf	set_sgram_byte@i,c
   925  0022'                    l1129:
   926  0022' 0E07               	movlw	7
   927  0024' 641B'              	cpfsgt	set_sgram_byte@i,c
   928  0026' D001               	goto	l83
   929  0028' 0012               	return	
   930  002A'                    l83:
   931                           
   932                           ;lcd.c: 25: send_byte(1, *ptr++);
   933  002A' C018' FFF6         	movff	set_sgram_byte@ptr,tblptrl
   934  002E' C019' FFF7         	movff	set_sgram_byte@ptr+1,tblptrh
   935  0032'                    	if	0	;tblptru may be non-zero
   936  0032'                    	endif
   937  0032'                    	if	0	;tblptru may be non-zero
   938  0032'                    	endif
   939  0032' 0008               	tblrd		*
   940  0034' CFF5 F016'         	movff	tablat,send_byte@data
   941  0038' 0E01               	movlw	1
   942  003A' EC00' F000'        	call	_send_byte
   943  003E' 4A18'              	infsnz	set_sgram_byte@ptr,f,c
   944  0040' 2A19'              	incf	set_sgram_byte@ptr+1,f,c
   945  0042' 2A1B'              	incf	set_sgram_byte@i,f,c
   946  0044' D7EE               	goto	l1129
   947  0046'                    __end_of_set_sgram_byte:
   948                           	opt stack 0
   949                           tblptru	equ	0xFF8
   950                           tblptrh	equ	0xFF7
   951                           tblptrl	equ	0xFF6
   952                           tablat	equ	0xFF5
   953                           prodh	equ	0xFF4
   954                           prodl	equ	0xFF3
   955                           intcon	equ	0xFF2
   956                           intcon2	equ	0xFF1
   957                           intcon3	equ	0xFF0
   958                           wreg	equ	0xFE8
   959                           status	equ	0xFD8
   960                           
   961 ;; *************** function _set_level *****************
   962 ;; Defined at:
   963 ;;		line 5 in file "lcd_status.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;  level           1    wreg     unsigned char 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  level           1   41[COMRAM] unsigned char 
   968 ;;  j               1   43[COMRAM] unsigned char 
   969 ;;  i               1   42[COMRAM] unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   979 ;;      Params:         0       0       0       0       0       0       0       0       0
   980 ;;      Locals:        15       0       0       0       0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0       0       0       0       0
   982 ;;      Totals:        15       0       0       0       0       0       0       0       0
   983 ;;Total ram usage:       15 bytes
   984 ;; Hardware stack levels used:    1
   985 ;; Hardware stack levels required when called:    4
   986 ;; This function calls:
   987 ;;		_lcd_gotoxy
   988 ;;		_send_byte
   989 ;; This function is called by:
   990 ;;		_main
   991 ;;		_init_level
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text5
   996  0000'                    __ptext5:
   997                           	opt stack 0
   998  0000'                    _set_level:
   999                           	opt stack 24
  1000                           
  1001                           ;incstack = 0
  1002                           ;set_level@level stored from wreg
  1003  0000' 6E29'              	movwf	set_level@level,c
  1004                           
  1005                           ;lcd_status.c: 6: if(level >=0 && level <=15)
  1006  0002' 0E10               	movlw	16
  1007  0004' 6029'              	cpfslt	set_level@level,c
  1008  0006' 0012               	return	
  1009                           
  1010                           ;lcd_status.c: 7: for(byte i = 1;i<3;i++){
  1011  0008' 0E01               	movlw	1
  1012  000A' 6E2A'              	movwf	set_level@i,c
  1013  000C'                    l1071:
  1014  000C' 0E02               	movlw	2
  1015  000E' 642A'              	cpfsgt	set_level@i,c
  1016  0010' D001               	goto	l122
  1017  0012' 0012               	return	
  1018  0014'                    l122:
  1019                           
  1020                           ;lcd_status.c: 8: lcd_gotoxy(1,i);
  1021  0014' C02A' F018'        	movff	set_level@i,lcd_gotoxy@y
  1022  0018' 0E01               	movlw	1
  1023  001A' EC00' F000'        	call	_lcd_gotoxy
  1024                           
  1025                           ;lcd_status.c: 9: for(byte j = 0;j<16 ;j++)
  1026  001E' 0E00               	movlw	0
  1027  0020' 6E2B'              	movwf	set_level@j,c
  1028  0022'                    l1079:
  1029  0022' 0E0F               	movlw	15
  1030  0024' 642B'              	cpfsgt	set_level@j,c
  1031  0026' D001               	goto	l124
  1032  0028' D052               	goto	u460
  1033  002A'                    l124:
  1034                           
  1035                           ;lcd_status.c: 10: send_byte(1,i==1? (j<8? ' ' : j<=level? j-8: ' '):(j<8? (j<=level? j:
      +                           ' '): (j<=level? 0x07: ' ')));
  1036  002A' 042A'              	decf	set_level@i,w,c
  1037  002C' B4D8               	btfsc	status,2,c
  1038  002E' D029               	goto	l127
  1039  0030' 0E07               	movlw	7
  1040  0032' 642B'              	cpfsgt	set_level@j,c
  1041  0034' D011               	goto	l131
  1042  0036' 502B'              	movf	set_level@j,w,c
  1043  0038' 5C29'              	subwf	set_level@level,w,c
  1044  003A' B0D8               	btfsc	status,0,c
  1045  003C' D004               	goto	l135
  1046  003E' 0E00               	movlw	0
  1047  0040' 6E22'              	movwf	_set_level$479+1,c
  1048  0042' 0E20               	movlw	32
  1049  0044' D003               	goto	L1
  1050  0046'                    l135:
  1051  0046' 0E00               	movlw	0
  1052  0048' 6E22'              	movwf	_set_level$479+1,c
  1053  004A' 0E07               	movlw	7
  1054  004C'                    L1:
  1055  004C' 6E21'              	movwf	_set_level$479,c
  1056  004E' C021' F01F'        	movff	_set_level$479,_set_level$478
  1057  0052' C022' F020'        	movff	_set_level$479+1,_set_level$478+1
  1058  0056' D010               	goto	l133
  1059  0058'                    l131:
  1060  0058' 502B'              	movf	set_level@j,w,c
  1061  005A' 5C29'              	subwf	set_level@level,w,c
  1062  005C' B0D8               	btfsc	status,0,c
  1063  005E' D005               	goto	l139
  1064  0060' 0E00               	movlw	0
  1065  0062' 6E24'              	movwf	_set_level$480+1,c
  1066  0064' 0E20               	movlw	32
  1067  0066' 6E23'              	movwf	_set_level$480,c
  1068  0068' D003               	goto	l141
  1069  006A'                    l139:
  1070  006A' C02B' F023'        	movff	set_level@j,_set_level$480
  1071  006E' 6A24'              	clrf	_set_level$480+1,c
  1072  0070'                    l141:
  1073  0070' C023' F01F'        	movff	_set_level$480,_set_level$478
  1074  0074' C024' F020'        	movff	_set_level$480+1,_set_level$478+1
  1075  0078'                    l133:
  1076  0078' C01F' F01D'        	movff	_set_level$478,_set_level$477
  1077  007C' C020' F01E'        	movff	_set_level$478+1,_set_level$477+1
  1078  0080' D01F               	goto	l129
  1079  0082'                    l127:
  1080  0082' 0E07               	movlw	7
  1081  0084' 642B'              	cpfsgt	set_level@j,c
  1082  0086' D014               	goto	l143
  1083  0088' 502B'              	movf	set_level@j,w,c
  1084  008A' 5C29'              	subwf	set_level@level,w,c
  1085  008C' B0D8               	btfsc	status,0,c
  1086  008E' D005               	goto	l147
  1087  0090' 0E00               	movlw	0
  1088  0092' 6E28'              	movwf	_set_level$482+1,c
  1089  0094' 0E20               	movlw	32
  1090  0096' 6E27'              	movwf	_set_level$482,c
  1091  0098' D006               	goto	l149
  1092  009A'                    l147:
  1093  009A' 0EF8               	movlw	248
  1094  009C' 242B'              	addwf	set_level@j,w,c
  1095  009E' 6E27'              	movwf	_set_level$482,c
  1096  00A0' 6A28'              	clrf	_set_level$482+1,c
  1097  00A2' 0EFF               	movlw	255
  1098  00A4' 2228'              	addwfc	_set_level$482+1,f,c
  1099  00A6'                    l149:
  1100  00A6' C027' F025'        	movff	_set_level$482,_set_level$481
  1101  00AA' C028' F026'        	movff	_set_level$482+1,_set_level$481+1
  1102  00AE' D004               	goto	l145
  1103  00B0'                    l143:
  1104  00B0' 0E00               	movlw	0
  1105  00B2' 6E26'              	movwf	_set_level$481+1,c
  1106  00B4' 0E20               	movlw	32
  1107  00B6' 6E25'              	movwf	_set_level$481,c
  1108  00B8'                    l145:
  1109  00B8' C025' F01D'        	movff	_set_level$481,_set_level$477
  1110  00BC' C026' F01E'        	movff	_set_level$481+1,_set_level$477+1
  1111  00C0'                    l129:
  1112  00C0' C01D' F016'        	movff	_set_level$477,send_byte@data
  1113  00C4' 0E01               	movlw	1
  1114  00C6' EC00' F000'        	call	_send_byte
  1115  00CA' 2A2B'              	incf	set_level@j,f,c
  1116  00CC' D7AA               	goto	l1079
  1117  00CE'                    u460:
  1118  00CE' 2A2A'              	incf	set_level@i,f,c
  1119  00D0' D79D               	goto	l1071
  1120  00D2'                    __end_of_set_level:
  1121                           	opt stack 0
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           prodh	equ	0xFF4
  1127                           prodl	equ	0xFF3
  1128                           intcon	equ	0xFF2
  1129                           intcon2	equ	0xFF1
  1130                           intcon3	equ	0xFF0
  1131                           wreg	equ	0xFE8
  1132                           status	equ	0xFD8
  1133                           
  1134 ;; *************** function _lcd_gotoxy *****************
  1135 ;; Defined at:
  1136 ;;		line 27 in file "lcd.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  x               1    wreg     unsigned char 
  1139 ;;  y               1   24[COMRAM] unsigned char 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  x               1   25[COMRAM] unsigned char 
  1142 ;;  dir             1   28[COMRAM] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, status,2, status,0, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1152 ;;      Params:         1       0       0       0       0       0       0       0       0
  1153 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1155 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1156 ;;Total ram usage:        5 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    3
  1159 ;; This function calls:
  1160 ;;		_send_byte
  1161 ;; This function is called by:
  1162 ;;		_set_level
  1163 ;;		_putch
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text6
  1168  0000'                    __ptext6:
  1169                           	opt stack 0
  1170  0000'                    _lcd_gotoxy:
  1171                           	opt stack 24
  1172                           
  1173                           ;incstack = 0
  1174                           ;lcd_gotoxy@x stored from wreg
  1175  0000' 6E19'              	movwf	lcd_gotoxy@x,c
  1176                           
  1177                           ;lcd.c: 28: byte dir = y!=1? 0x40:0;
  1178  0002' 0418'              	decf	lcd_gotoxy@y,w,c
  1179  0004' A4D8               	btfss	status,2,c
  1180  0006' D004               	goto	l89
  1181  0008' 0E00               	movlw	0
  1182  000A' 6E1B'              	movwf	_lcd_gotoxy$455+1,c
  1183  000C' 0E00               	movlw	0
  1184  000E' D003               	goto	L2
  1185  0010'                    l89:
  1186  0010' 0E00               	movlw	0
  1187  0012' 6E1B'              	movwf	_lcd_gotoxy$455+1,c
  1188  0014' 0E40               	movlw	64
  1189  0016'                    L2:
  1190  0016' 6E1A'              	movwf	_lcd_gotoxy$455,c
  1191  0018' C01A' F01C'        	movff	_lcd_gotoxy$455,lcd_gotoxy@dir
  1192                           
  1193                           ;lcd.c: 29: dir += x-1;
  1194  001C' 0419'              	decf	lcd_gotoxy@x,w,c
  1195  001E' 261C'              	addwf	lcd_gotoxy@dir,f,c
  1196                           
  1197                           ;lcd.c: 30: send_byte(0,0x80|dir);
  1198  0020' 501C'              	movf	lcd_gotoxy@dir,w,c
  1199  0022' 0980               	iorlw	128
  1200  0024' 6E16'              	movwf	send_byte@data,c
  1201  0026' 0E00               	movlw	0
  1202  0028' EC00' F000'        	call	_send_byte
  1203  002C' 0012               	return		;funcret
  1204  002E'                    __end_of_lcd_gotoxy:
  1205                           	opt stack 0
  1206                           tblptru	equ	0xFF8
  1207                           tblptrh	equ	0xFF7
  1208                           tblptrl	equ	0xFF6
  1209                           tablat	equ	0xFF5
  1210                           prodh	equ	0xFF4
  1211                           prodl	equ	0xFF3
  1212                           intcon	equ	0xFF2
  1213                           intcon2	equ	0xFF1
  1214                           intcon3	equ	0xFF0
  1215                           wreg	equ	0xFE8
  1216                           status	equ	0xFD8
  1217                           
  1218 ;; *************** function _send_byte *****************
  1219 ;; Defined at:
  1220 ;;		line 11 in file "lcd.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;  comand          1    wreg     unsigned char 
  1223 ;;  data            1   22[COMRAM] unsigned char 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  comand          1   23[COMRAM] unsigned char 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1235 ;;      Params:         1       0       0       0       0       0       0       0       0
  1236 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1238 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1239 ;;Total ram usage:        2 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    2
  1242 ;; This function calls:
  1243 ;;		_send_nibble
  1244 ;; This function is called by:
  1245 ;;		_set_sgram_byte
  1246 ;;		_lcd_gotoxy
  1247 ;;		_lcd_init
  1248 ;;		_set_level
  1249 ;;		_putch
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text7
  1254  0000'                    __ptext7:
  1255                           	opt stack 0
  1256  0000'                    _send_byte:
  1257                           	opt stack 26
  1258                           
  1259                           ;incstack = 0
  1260                           ;send_byte@comand stored from wreg
  1261  0000' 6E17'              	movwf	send_byte@comand,c
  1262                           
  1263                           ;lcd.c: 13: send_nibble(comand,data>>4);
  1264  0002' 3816'              	swapf	send_byte@data,w,c
  1265  0004' 0B0F               	andlw	15
  1266  0006' 6E13'              	movwf	send_nibble@data,c
  1267  0008' 5017'              	movf	send_byte@comand,w,c
  1268  000A' EC00' F000'        	call	_send_nibble
  1269                           
  1270                           ;lcd.c: 14: send_nibble(comand,data);
  1271  000E' C016' F013'        	movff	send_byte@data,send_nibble@data
  1272  0012' 5017'              	movf	send_byte@comand,w,c
  1273  0014' EC00' F000'        	call	_send_nibble
  1274  0018' 0012               	return		;funcret
  1275  001A'                    __end_of_send_byte:
  1276                           	opt stack 0
  1277                           tblptru	equ	0xFF8
  1278                           tblptrh	equ	0xFF7
  1279                           tblptrl	equ	0xFF6
  1280                           tablat	equ	0xFF5
  1281                           prodh	equ	0xFF4
  1282                           prodl	equ	0xFF3
  1283                           intcon	equ	0xFF2
  1284                           intcon2	equ	0xFF1
  1285                           intcon3	equ	0xFF0
  1286                           wreg	equ	0xFE8
  1287                           status	equ	0xFD8
  1288                           
  1289 ;; *************** function _send_nibble *****************
  1290 ;; Defined at:
  1291 ;;		line 4 in file "lcd.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  comand          1    wreg     unsigned char 
  1294 ;;  data            1   19[COMRAM] unsigned char 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  comand          1   20[COMRAM] unsigned char 
  1297 ;;  i               1   21[COMRAM] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1307 ;;      Params:         1       0       0       0       0       0       0       0       0
  1308 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1310 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1311 ;;Total ram usage:        3 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_send_byte
  1318 ;;		_lcd_init
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text8
  1323  0000'                    __ptext8:
  1324                           	opt stack 0
  1325  0000'                    _send_nibble:
  1326                           	opt stack 27
  1327                           
  1328                           ;incstack = 0
  1329                           ;send_nibble@comand stored from wreg
  1330  0000' 6E14'              	movwf	send_nibble@comand,c
  1331                           
  1332                           ;lcd.c: 5: LATCbits.LC1 = comand; __nop();
  1333  0002' B014'              	btfsc	send_nibble@comand,0,c
  1334  0004' D002               	bra	u335
  1335  0006' 928B               	bcf	3979,1,c	;volatile
  1336  0008' D001               	bra	u336
  1337  000A'                    u335:
  1338  000A' 828B               	bsf	3979,1,c	;volatile
  1339  000C'                    u336:
  1340  000C' F000               	nop	
  1341                           
  1342                           ;lcd.c: 6: LATCbits.LC0 = 1; __nop();
  1343  000E' 808B               	bsf	3979,0,c	;volatile
  1344  0010' F000               	nop	
  1345                           
  1346                           ;lcd.c: 7: LATD = 0x0F & data; __nop();
  1347  0012' 5013'              	movf	send_nibble@data,w,c
  1348  0014' 0B0F               	andlw	15
  1349  0016' 6E8C               	movwf	3980,c	;volatile
  1350  0018' F000               	nop	
  1351                           
  1352                           ;lcd.c: 8: LATCbits.LC0 = 0;
  1353  001A' 908B               	bcf	3979,0,c	;volatile
  1354                           
  1355                           ;lcd.c: 9: for(byte i=0;i<20;i++) __nop();
  1356  001C' 0E00               	movlw	0
  1357  001E' 6E15'              	movwf	send_nibble@i,c
  1358  0020'                    l1045:
  1359  0020' 0E13               	movlw	19
  1360  0022' 6415'              	cpfsgt	send_nibble@i,c
  1361  0024' D001               	goto	l75
  1362  0026' 0012               	return	
  1363  0028'                    l75:
  1364  0028' F000               	nop	
  1365  002A' 2A15'              	incf	send_nibble@i,f,c
  1366  002C' D7F9               	goto	l1045
  1367  002E'                    __end_of_send_nibble:
  1368                           	opt stack 0
  1369                           tblptru	equ	0xFF8
  1370                           tblptrh	equ	0xFF7
  1371                           tblptrl	equ	0xFF6
  1372                           tablat	equ	0xFF5
  1373                           prodh	equ	0xFF4
  1374                           prodl	equ	0xFF3
  1375                           intcon	equ	0xFF2
  1376                           intcon2	equ	0xFF1
  1377                           intcon3	equ	0xFF0
  1378                           wreg	equ	0xFE8
  1379                           status	equ	0xFD8
  1380                           
  1381 ;; *************** function _ext0 *****************
  1382 ;; Defined at:
  1383 ;;		line 17 in file "main.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1397 ;;      Params:         0       0       0       0       0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1399 ;;      Temps:         19       0       0       0       0       0       0       0       0
  1400 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1401 ;;Total ram usage:       19 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		Interrupt level 2
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	intcode
  1411  0000'                    __pintcode:
  1412                           	opt stack 0
  1413  0000'                    _ext0:
  1414                           	opt stack 24
  1415                           
  1416                           ;incstack = 0
  1417  0000' 8200'              	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1418  0002' ED00' F000'        	call	int_func,f	;refresh shadow registers
  1419                           tblptru	equ	0xFF8
  1420                           tblptrh	equ	0xFF7
  1421                           tblptrl	equ	0xFF6
  1422                           tablat	equ	0xFF5
  1423                           prodh	equ	0xFF4
  1424                           prodl	equ	0xFF3
  1425                           intcon	equ	0xFF2
  1426                           intcon2	equ	0xFF1
  1427                           intcon3	equ	0xFF0
  1428                           wreg	equ	0xFE8
  1429                           status	equ	0xFD8
  1430                           
  1431                           	psect	intcode_body
  1432  0000'                    __pintcode_body:
  1433                           	opt stack 24
  1434  0000'                    int_func:
  1435                           	opt stack 24
  1436  0000' 0006               	pop		; remove dummy address from shadow register refresh
  1437  0002' CFFA F001'         	movff	pclath,??_ext0+1
  1438  0006' CFFB F002'         	movff	pclatu,??_ext0+2
  1439  000A' CFE9 F003'         	movff	fsr0l,??_ext0+3
  1440  000E' CFEA F004'         	movff	fsr0h,??_ext0+4
  1441  0012' CFE1 F005'         	movff	fsr1l,??_ext0+5
  1442  0016' CFE2 F006'         	movff	fsr1h,??_ext0+6
  1443  001A' CFD9 F007'         	movff	fsr2l,??_ext0+7
  1444  001E' CFDA F008'         	movff	fsr2h,??_ext0+8
  1445  0022' CFF3 F009'         	movff	prodl,??_ext0+9
  1446  0026' CFF4 F00A'         	movff	prodh,??_ext0+10
  1447  002A' CFF6 F00B'         	movff	tblptrl,??_ext0+11
  1448  002E' CFF7 F00C'         	movff	tblptrh,??_ext0+12
  1449  0032' CFF8 F00D'         	movff	tblptru,??_ext0+13
  1450  0036' CFF5 F00E'         	movff	tablat,??_ext0+14
  1451  003A' C000' F00F'        	movff	btemp,??_ext0+15
  1452  003E' C001' F010'        	movff	btemp+1,??_ext0+16
  1453  0042' C002' F011'        	movff	btemp+2,??_ext0+17
  1454  0046' C003' F012'        	movff	btemp+3,??_ext0+18
  1455                           
  1456                           ;main.c: 24: _delay((unsigned long)((1)*(20000000/4000.0)));
  1457  004A' 0E07               	movlw	7
  1458  004C' 6E00'              	movwf	??_ext0& (0+255),c
  1459  004E' 0E7D               	movlw	125
  1460  0050'                    i2u64_47:
  1461  0050' 2EE8               	decfsz	wreg,f,c
  1462  0052' D7FE               	bra	i2u64_47
  1463  0054' 2E00'              	decfsz	??_ext0& (0+255),f,c
  1464  0056' D7FC               	bra	i2u64_47
  1465  0058' F000               	nop	
  1466                           
  1467                           ;main.c: 25: if(INTCONbits.INT0IF){
  1468  005A' A2F2               	btfss	intcon,1,c	;volatile
  1469  005C' D020               	goto	i2l43
  1470                           
  1471                           ;main.c: 26: INTCONbits.INT0IF = 0;
  1472  005E' 92F2               	bcf	intcon,1,c	;volatile
  1473                           
  1474                           ;main.c: 27: INTCON2bits.INTEDG0 = !INTCON2bits.INTEDG0;
  1475  0060' BCF1               	btfsc	intcon2,6,c	;volatile
  1476  0062' D003               	goto	i2u25_40
  1477  0064' 6A00'              	clrf	??_ext0& (0+255),c
  1478  0066' 2A00'              	incf	??_ext0& (0+255),f,c
  1479  0068' D001               	goto	i2u26_48
  1480  006A'                    i2u25_40:
  1481  006A' 6A00'              	clrf	??_ext0& (0+255),c
  1482  006C'                    i2u26_48:
  1483  006C' 3A00'              	swapf	??_ext0,f,c
  1484  006E' 4600'              	rlncf	??_ext0,f,c
  1485  0070' 4600'              	rlncf	??_ext0,f,c
  1486  0072' 50F1               	movf	intcon2,w,c	;volatile
  1487  0074' 1800'              	xorwf	??_ext0,w,c
  1488  0076' 0BBF               	andlw	-65
  1489  0078' 1800'              	xorwf	??_ext0,w,c
  1490  007A' 6EF1               	movwf	intcon2,c	;volatile
  1491                           
  1492                           ;main.c: 29: if(PORTBbits.RB0 != PORTBbits.RB1)
  1493  007C' A281               	btfss	3969,1,c	;volatile
  1494  007E' D002               	goto	i2u27_40
  1495  0080' 0E01               	movlw	1
  1496  0082' D001               	goto	i2u27_42
  1497  0084'                    i2u27_40:
  1498  0084' 0E00               	movlw	0
  1499  0086'                    i2u27_42:
  1500  0086' 6E00'              	movwf	??_ext0& (0+255),c
  1501  0088' A081               	btfss	3969,0,c	;volatile
  1502  008A' D002               	goto	i2u28_40
  1503  008C' 0E01               	movlw	1
  1504  008E' D001               	goto	i2u28_42
  1505  0090'                    i2u28_40:
  1506  0090' 0E00               	movlw	0
  1507  0092'                    i2u28_42:
  1508  0092' 1A00'              	xorwf	??_ext0,f,c
  1509  0094' B4D8               	btfsc	status,2,c
  1510  0096' D002               	goto	i2l42
  1511                           
  1512                           ;main.c: 30: Nstep++;
  1513  0098' 2A00'              	incf	_Nstep,f,c
  1514  009A' D001               	goto	i2l43
  1515  009C'                    i2l42:
  1516                           
  1517                           ;main.c: 31: else
  1518                           ;main.c: 32: Nstep--;
  1519  009C' 0600'              	decf	_Nstep,f,c
  1520  009E'                    i2l43:
  1521                           
  1522                           ;main.c: 33: }
  1523                           ;main.c: 34: if (Nstep>40){
  1524  009E' 0E28               	movlw	40
  1525  00A0' 6400'              	cpfsgt	_Nstep,c
  1526  00A2' D006               	goto	i2l44
  1527                           
  1528                           ;main.c: 35: Nstep = 0;
  1529  00A4' 0E00               	movlw	0
  1530  00A6' 6E00'              	movwf	_Nstep,c
  1531                           
  1532                           ;main.c: 36: flag = 1;
  1533  00A8' 0E01               	movlw	1
  1534  00AA' 6E02'              	movwf	_flag,c
  1535                           
  1536                           ;main.c: 37: level = ++level & 0x0F;
  1537  00AC' 2A01'              	incf	_level,f,c
  1538  00AE' D008               	goto	L3
  1539  00B0'                    i2l44:
  1540  00B0' 0E28               	movlw	40
  1541  00B2' 6000'              	cpfslt	_Nstep,c
  1542  00B4' D008               	goto	i2l46
  1543                           
  1544                           ;main.c: 39: Nstep = 0;
  1545  00B6' 0E00               	movlw	0
  1546  00B8' 6E00'              	movwf	_Nstep,c
  1547                           
  1548                           ;main.c: 40: flag = 1;
  1549  00BA' 0E01               	movlw	1
  1550  00BC' 6E02'              	movwf	_flag,c
  1551                           
  1552                           ;main.c: 41: level = --level & 0x0F;
  1553  00BE' 0601'              	decf	_level,f,c
  1554  00C0'                    L3:
  1555  00C0' 5001'              	movf	_level,w,c
  1556  00C2' 0B0F               	andlw	15
  1557  00C4' 6E01'              	movwf	_level,c
  1558  00C6'                    i2l46:
  1559  00C6' C012' F003'        	movff	??_ext0+18,btemp+3
  1560  00CA' C011' F002'        	movff	??_ext0+17,btemp+2
  1561  00CE' C010' F001'        	movff	??_ext0+16,btemp+1
  1562  00D2' C00F' F000'        	movff	??_ext0+15,btemp
  1563  00D6' C00E' FFF5         	movff	??_ext0+14,tablat
  1564  00DA' C00D' FFF8         	movff	??_ext0+13,tblptru
  1565  00DE' C00C' FFF7         	movff	??_ext0+12,tblptrh
  1566  00E2' C00B' FFF6         	movff	??_ext0+11,tblptrl
  1567  00E6' C00A' FFF4         	movff	??_ext0+10,prodh
  1568  00EA' C009' FFF3         	movff	??_ext0+9,prodl
  1569  00EE' C008' FFDA         	movff	??_ext0+8,fsr2h
  1570  00F2' C007' FFD9         	movff	??_ext0+7,fsr2l
  1571  00F6' C006' FFE2         	movff	??_ext0+6,fsr1h
  1572  00FA' C005' FFE1         	movff	??_ext0+5,fsr1l
  1573  00FE' C004' FFEA         	movff	??_ext0+4,fsr0h
  1574  0102' C003' FFE9         	movff	??_ext0+3,fsr0l
  1575  0106' C002' FFFB         	movff	??_ext0+2,pclatu
  1576  010A' C001' FFFA         	movff	??_ext0+1,pclath
  1577  010E' 9200'              	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1578  0110' 0011               	retfie		f
  1579  0112'                    __end_of_ext0:
  1580                           	opt stack 0
  1581                           pclatu	equ	0xFFB
  1582                           pclath	equ	0xFFA
  1583                           tblptru	equ	0xFF8
  1584                           tblptrh	equ	0xFF7
  1585                           tblptrl	equ	0xFF6
  1586                           tablat	equ	0xFF5
  1587                           prodh	equ	0xFF4
  1588                           prodl	equ	0xFF3
  1589                           intcon	equ	0xFF2
  1590                           intcon2	equ	0xFF1
  1591                           intcon3	equ	0xFF0
  1592                           fsr0h	equ	0xFEA
  1593                           fsr0l	equ	0xFE9
  1594                           wreg	equ	0xFE8
  1595                           fsr1h	equ	0xFE2
  1596                           fsr1l	equ	0xFE1
  1597                           fsr2h	equ	0xFDA
  1598                           fsr2l	equ	0xFD9
  1599                           status	equ	0xFD8
  1600                           pclatu	equ	0xFFB
  1601                           pclath	equ	0xFFA
  1602                           tblptru	equ	0xFF8
  1603                           tblptrh	equ	0xFF7
  1604                           tblptrl	equ	0xFF6
  1605                           tablat	equ	0xFF5
  1606                           prodh	equ	0xFF4
  1607                           prodl	equ	0xFF3
  1608                           intcon	equ	0xFF2
  1609                           intcon2	equ	0xFF1
  1610                           intcon3	equ	0xFF0
  1611                           fsr0h	equ	0xFEA
  1612                           fsr0l	equ	0xFE9
  1613                           wreg	equ	0xFE8
  1614                           fsr1h	equ	0xFE2
  1615                           fsr1l	equ	0xFE1
  1616                           fsr2h	equ	0xFDA
  1617                           fsr2l	equ	0xFD9
  1618                           status	equ	0xFD8
  1619                           
  1620                           	psect	rparam
  1621  0000                     pclatu	equ	0xFFB
  1622                           pclath	equ	0xFFA
  1623                           tblptru	equ	0xFF8
  1624                           tblptrh	equ	0xFF7
  1625                           tblptrl	equ	0xFF6
  1626                           tablat	equ	0xFF5
  1627                           prodh	equ	0xFF4
  1628                           prodl	equ	0xFF3
  1629                           intcon	equ	0xFF2
  1630                           intcon2	equ	0xFF1
  1631                           intcon3	equ	0xFF0
  1632                           fsr0h	equ	0xFEA
  1633                           fsr0l	equ	0xFE9
  1634                           wreg	equ	0xFE8
  1635                           fsr1h	equ	0xFE2
  1636                           fsr1l	equ	0xFE1
  1637                           fsr2h	equ	0xFDA
  1638                           fsr2l	equ	0xFD9
  1639                           status	equ	0xFD8
  1640                           
  1641                           	psect	temp
  1642  0000'                    btemp:
  1643                           	opt stack 0
  1644  0000'                    	ds	1
  1645  0000                     int$flags	set	btemp
  1646  0000                     wtemp6	set	btemp+1
  1647                           pclatu	equ	0xFFB
  1648                           pclath	equ	0xFFA
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           prodh	equ	0xFF4
  1654                           prodl	equ	0xFF3
  1655                           intcon	equ	0xFF2
  1656                           intcon2	equ	0xFF1
  1657                           intcon3	equ	0xFF0
  1658                           fsr0h	equ	0xFEA
  1659                           fsr0l	equ	0xFE9
  1660                           wreg	equ	0xFE8
  1661                           fsr1h	equ	0xFE2
  1662                           fsr1l	equ	0xFE1
  1663                           fsr2h	equ	0xFDA
  1664                           fsr2l	equ	0xFD9
  1665                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    140
    Data        0
    BSS         3
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    set_sgram_byte@ptr	PTR unsigned char  size(2) Largest target is 64
		 -> lcd_status@animation(CODE[64]), 


Critical Paths under _main in COMRAM

    _main->_setup
    _setup->_init_level
    _lcd_init->_send_byte
    _init_level->_set_level
    _set_sgram_byte->_send_byte
    _set_level->_lcd_gotoxy
    _lcd_gotoxy->_send_byte
    _send_byte->_send_nibble

Critical Paths under _ext0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ext0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ext0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ext0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ext0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ext0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ext0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ext0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ext0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8535
                                             47 COMRAM     2     2      0
                          _set_level
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    5665
                                             45 COMRAM     2     2      0
                         _init_level
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             2     2      0    1522
                                             24 COMRAM     2     2      0
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (2) _init_level                                           1     1      0    4143
                                             44 COMRAM     1     1      0
                          _set_level
                     _set_sgram_byte
 ---------------------------------------------------------------------------------
 (3) _set_sgram_byte                                       4     2      2    1183
                                             24 COMRAM     4     2      2
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _set_level                                           15    15      0    2870
                                             29 COMRAM    15    15      0
                         _lcd_gotoxy
                          _send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_gotoxy                                           5     4      1    1334
                                             24 COMRAM     5     4      1
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _send_byte                                            2     1      1    1014
                                             22 COMRAM     2     1      1
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          3     2      1     394
                                             19 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ext0                                                19    19      0       0
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _set_level
     _lcd_gotoxy
       _send_byte
         _send_nibble
     _send_byte
       _send_nibble
   _setup
     _init_level
       _set_level
         _lcd_gotoxy
           _send_byte
             _send_nibble
         _send_byte
           _send_nibble
       _set_sgram_byte
         _send_byte
           _send_nibble
     _lcd_init
       _send_byte
         _send_nibble
       _send_nibble

 _ext0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      37       1       58.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      20        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue May 15 21:08:27 2018

                         l52 000010                           l75 000028                           l83 00002A  
                         l95 00002A                           l89 000010                           l97 00006E  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                          l122 000014  
                        l131 000058                          l124 00002A                          l141 000070  
                        l133 000078                          l143 0000B0                          l127 000082  
                        l135 000046                          l129 0000C0                          l145 0000B8  
                        l153 00000C                          l147 00009A                          l139 00006A  
                        l149 0000A6                 __CFG_CPB$OFF 000000                          u510 000048  
                        u335 00000A                          u336 00000C                          u530 00009E  
               __CFG_CPD$OFF 000000                          u460 0000CE                          u550 000026  
                        u607 00003A                          u617 000058                          u627 000090  
                        u637 0000A4                          u577 000030                          u587 00002C  
                        u597 000016                 __CFG_BOR$OFF 000000                          prod 000FF3  
                        wreg 000FE8                 __CFG_FOSC$HS 000000                  lcd_gotoxy@x 000019  
                lcd_gotoxy@y 000018                 __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000  
                       l1045 000020                         l1071 00000C                         l1151 000022  
                       l1129 000022                         l1079 000022                         l1185 000004  
                       l1169 000066                         _LATB 000F8A                         _LATD 000F8C  
                       i2l42 00009C                         i2l43 00009E                         i2l44 0000B0  
                       i2l46 0000C6                         _flag 000002                         _hhhh 000000  
                       _ext0 000000                         _main 000000                         fsr0h 000FEA  
                       fsr1h 000FE2                         fsr2h 000FDA                         fsr0l 000FE9  
                       fsr1l 000FE1                         fsr2l 000FD9                         btemp 000000  
                       prodh 000FF4                         prodl 000FF3                         start 000000* 
              __CFG_IESO$OFF 000000  __end_oflcd_status@animation 00008D                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                __CFG_PLLDIV$1 000000               __CFG_CCP2MX$ON 000000  
                      ?_ext0 000000                        ?_main 000000                __CFG_USBDIV$1 000000  
                      _TRISB 000F93                        _TRISD 000F95                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000              send_byte@comand 000017                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                        _Nstep 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
                      _level 000001                        _setup 000000                        pclath 000FFA  
                      tablat 000FF5              send_nibble@data 000013                        status 000FD8  
                      wtemp6 000001               __CFG_ICPRT$OFF 000000              __initialization 000000  
               __end_of_ext0 000112                 __end_of_main 00003E                lcd_gotoxy@dir 00001C  
                     ??_ext0 000000                       ??_main 00002F                __activetblptr 000002  
               ?_send_nibble 000013                       ?_setup 000000               __CFG_XINST$OFF 000000  
           __end_of_lcd_init 0000B0               __CFG_STVREN$ON 000000             __end_of_init_str 00004D  
                init_level@i 00002C                 __mediumconst 000000*                      tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8              set_sgram_byte@i 00001B  
                 __accesstop 000000*     __end_of__initialization 000006              __CFG_PBADEN$OFF 000000  
              ___rparam_used 000001               __pcstackCOMRAM 000000                __end_of_setup 00003E  
                    ??_setup 00002D                   __pnvCOMRAM 000000      __size_of_set_sgram_byte 000000  
         __size_of_send_byte 000000           __size_of_set_level 000000                   _lcd_gotoxy 000000  
                    i2u25_40 00006A                      i2u27_40 000084                      i2u26_48 00006C  
                    i2u27_42 000086                      i2u28_40 000090                      i2u28_42 000092  
                    i2u64_47 000050                    ?_lcd_init 000000              __CFG_VREGEN$OFF 000000  
       __size_of_send_nibble 000000            __end_of_animation 000041                      __Hparam 000000  
                    __Lparam 000000                 __psmallconst 000000                   _init_level 000000  
                    __pcinit 000000                      __ramtop 000000*                     __ptext0 000000  
                    __ptext1 000000                      __ptext2 000000                      __ptext3 000000  
                    __ptext4 000000                      __ptext5 000000                      __ptext6 000000  
                    __ptext7 000000                      __ptext8 000000                   ??_lcd_init 000018  
             __pintcode_body 000000         end_of_initialization 000006            __end_of_send_byte 00001A  
              __Lmediumconst 000000*                     int_func 000000            __end_of_set_level 0000D2  
          send_nibble@comand 000014                    _PORTBbits 000F81               set_level@level 000029  
                  _TRISCbits 000F94                  ?_lcd_gotoxy 000018                send_byte@data 000016  
             _set_sgram_byte 000000                  ?_init_level 000000          start_initialization 000000  
     __end_of_set_sgram_byte 000046          __size_of_lcd_gotoxy 000000             __CFG_LPT1OSC$OFF 000000  
                __pbssCOMRAM 000000          lcd_status@animation 00004D            __size_of_lcd_init 000000  
        __size_of_init_level 000000              ?_set_sgram_byte 000018                    __pintcode 000000  
                  _animation 000001                  __smallconst 000000*               ??_send_nibble 000014  
             __size_of_setup 000000                   set_level@i 00002A                   set_level@j 00002B  
                   _LATCbits 000F8B                    _send_byte 000000                _set_level$480 000023  
              _set_level$481 000025                _set_level$482 000027                _set_level$477 00001D  
              _set_level$478 00001F                _set_level$479 000021                    _set_level 000000  
                   _RCONbits 000FD0             __CFG_WDTPS$32768 000000                    lcd_init@i 000019  
               send_nibble@i 000015                 ??_lcd_gotoxy 000019                  _INTCON2bits 000FF1  
                _INTCON3bits 000FF0          __end_oflcd@init_str 000045          __end_of_send_nibble 00002E  
                 ?_send_byte 000016                     __Hrparam 000000*                  ?_set_level 000000  
                   __Lrparam 000000*          __end_of_lcd_gotoxy 00002E                 ??_init_level 00002C  
                   _lcd_init 000000                __size_of_ext0 000000                __size_of_main 000000  
                   _init_str 000049           __end_of_init_level 00002E               _lcd_gotoxy$455 00001A  
                   int$flags 000000        __CFG_CPUDIV$OSC1_PLL2 000000                   _INTCONbits 000FF2  
                lcd@init_str 000045                  _send_nibble 000000                     intlevel2 000000* 
           ??_set_sgram_byte 00001A                  ??_send_byte 000017                  ??_set_level 00001D  
          set_sgram_byte@dir 00001A            set_sgram_byte@ptr 000018  
