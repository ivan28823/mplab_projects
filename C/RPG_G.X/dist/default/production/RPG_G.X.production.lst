

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue May 08 01:11:49 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 1.45
    17                           ; Generated 16/11/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _RCONbits	set	4048
    51  0000                     _TRISB	set	3987
    52  0000                     _LATB	set	3978
    53  0000                     _PORTBbits	set	3969
    54  0000                     _INTCON2bits	set	4081
    55  0000                     _INTCONbits	set	4082
    56                           
    57                           ; #config settings
    58  0000                     
    59                           	psect	cinit
    60  000148                     __pcinit:
    61                           	opt stack 0
    62  000148                     start_initialization:
    63                           	opt stack 0
    64  000148                     __initialization:
    65                           	opt stack 0
    66                           
    67                           ; Clear objects allocated to COMRAM (2 bytes)
    68  000148  6A15               	clrf	(__pbssCOMRAM+1)& (0+255),c
    69  00014A  6A14               	clrf	__pbssCOMRAM& (0+255),c
    70  00014C                     end_of_initialization:
    71                           	opt stack 0
    72  00014C                     __end_of__initialization:
    73                           	opt stack 0
    74  00014C  9016               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    75  00014E  9216               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    76  000150  0100               	movlb	0
    77  000152  EF8E  F000         	goto	_main	;jump to C main() function
    78                           
    79                           	psect	bssCOMRAM
    80  000014                     __pbssCOMRAM:
    81                           	opt stack 0
    82  000014                     _semaforo:
    83                           	opt stack 0
    84  000014                     	ds	1
    85  000015                     _cuenta:
    86                           	opt stack 0
    87  000015                     	ds	1
    88                           
    89                           	psect	cstackCOMRAM
    90  000001                     __pcstackCOMRAM:
    91                           	opt stack 0
    92  000001                     ??_encoder:
    93  000001                     
    94                           ; 1 bytes @ 0x0
    95  000001                     	ds	19
    96  000014                     
    97                           ; 1 bytes @ 0x13
    98 ;;
    99 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   100 ;;
   101 ;; *************** function _main *****************
   102 ;; Defined at:
   103 ;;		line 33 in file "main.c"
   104 ;; Parameters:    Size  Location     Type
   105 ;;		None
   106 ;; Auto vars:     Size  Location     Type
   107 ;;		None
   108 ;; Return value:  Size  Location     Type
   109 ;;                  1    wreg      void 
   110 ;; Registers used:
   111 ;;		wreg, status,2, status,0, cstack
   112 ;; Tracked objects:
   113 ;;		On entry : 0/0
   114 ;;		On exit  : 0/0
   115 ;;		Unchanged: 0/0
   116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   117 ;;      Params:         0       0       0       0       0       0       0       0       0
   118 ;;      Locals:         0       0       0       0       0       0       0       0       0
   119 ;;      Temps:          0       0       0       0       0       0       0       0       0
   120 ;;      Totals:         0       0       0       0       0       0       0       0       0
   121 ;;Total ram usage:        0 bytes
   122 ;; Hardware stack levels required when called:    2
   123 ;; This function calls:
   124 ;;		_setup
   125 ;; This function is called by:
   126 ;;		Startup code after reset
   127 ;; This function uses a non-reentrant model
   128 ;;
   129                           
   130                           	psect	text0
   131  00011C                     __ptext0:
   132                           	opt stack 0
   133  00011C                     _main:
   134                           	opt stack 29
   135                           
   136                           ;main.c: 34: setup();
   137                           
   138                           ;incstack = 0
   139  00011C  EC99  F000         	call	_setup	;wreg free
   140  000120                     
   141                           ;main.c: 36: if(semaforo){
   142  000120  5014               	movf	_semaforo,w,c
   143  000122  B4D8               	btfsc	status,2,c
   144  000124  D7FD               	goto	l35
   145                           
   146                           ;main.c: 37: LATB = cuenta << 4;
   147  000126  3815               	swapf	_cuenta,w,c
   148  000128  0BF0               	andlw	240
   149  00012A  6E8A               	movwf	3978,c	;volatile
   150                           
   151                           ;main.c: 38: semaforo = 0;
   152  00012C  0E00               	movlw	0
   153  00012E  6E14               	movwf	_semaforo,c
   154  000130  D7F7               	goto	l35
   155  000132                     __end_of_main:
   156                           	opt stack 0
   157                           status	equ	0xFD8
   158                           
   159 ;; *************** function _setup *****************
   160 ;; Defined at:
   161 ;;		line 42 in file "main.c"
   162 ;; Parameters:    Size  Location     Type
   163 ;;		None
   164 ;; Auto vars:     Size  Location     Type
   165 ;;		None
   166 ;; Return value:  Size  Location     Type
   167 ;;                  1    wreg      void 
   168 ;; Registers used:
   169 ;;		wreg, status,2
   170 ;; Tracked objects:
   171 ;;		On entry : 0/0
   172 ;;		On exit  : 0/0
   173 ;;		Unchanged: 0/0
   174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   175 ;;      Params:         0       0       0       0       0       0       0       0       0
   176 ;;      Locals:         0       0       0       0       0       0       0       0       0
   177 ;;      Temps:          0       0       0       0       0       0       0       0       0
   178 ;;      Totals:         0       0       0       0       0       0       0       0       0
   179 ;;Total ram usage:        0 bytes
   180 ;; Hardware stack levels used:    1
   181 ;; Hardware stack levels required when called:    1
   182 ;; This function calls:
   183 ;;		Nothing
   184 ;; This function is called by:
   185 ;;		_main
   186 ;; This function uses a non-reentrant model
   187 ;;
   188                           
   189                           	psect	text1
   190  000132                     __ptext1:
   191                           	opt stack 0
   192  000132                     _setup:
   193                           	opt stack 29
   194                           
   195                           ;main.c: 43: INTCONbits.GIEH=0;
   196                           
   197                           ;incstack = 0
   198  000132  9EF2               	bcf	intcon,7,c	;volatile
   199                           
   200                           ;main.c: 45: TRISB = 0x0F;
   201  000134  0E0F               	movlw	15
   202  000136  6E93               	movwf	3987,c	;volatile
   203                           
   204                           ;main.c: 46: LATB = 0x00;
   205  000138  0E00               	movlw	0
   206  00013A  6E8A               	movwf	3978,c	;volatile
   207                           
   208                           ;main.c: 48: INTCONbits.INT0IF = 0;
   209  00013C  92F2               	bcf	intcon,1,c	;volatile
   210                           
   211                           ;main.c: 49: INTCONbits.INT0IE = 1;
   212  00013E  88F2               	bsf	intcon,4,c	;volatile
   213                           
   214                           ;main.c: 51: INTCON2bits.INTEDG0 = 1;
   215  000140  8CF1               	bsf	intcon2,6,c	;volatile
   216                           
   217                           ;main.c: 53: RCONbits.IPEN = 0;
   218  000142  9ED0               	bcf	4048,7,c	;volatile
   219                           
   220                           ;main.c: 55: INTCONbits.GIE = 1;
   221  000144  8EF2               	bsf	intcon,7,c	;volatile
   222  000146  0012               	return		;funcret
   223  000148                     __end_of_setup:
   224                           	opt stack 0
   225                           intcon	equ	0xFF2
   226                           intcon2	equ	0xFF1
   227                           status	equ	0xFD8
   228                           
   229 ;; *************** function _encoder *****************
   230 ;; Defined at:
   231 ;;		line 13 in file "main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   245 ;;      Params:         0       0       0       0       0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0       0       0       0       0
   247 ;;      Temps:         19       0       0       0       0       0       0       0       0
   248 ;;      Totals:        19       0       0       0       0       0       0       0       0
   249 ;;Total ram usage:       19 bytes
   250 ;; Hardware stack levels used:    1
   251 ;; This function calls:
   252 ;;		Nothing
   253 ;; This function is called by:
   254 ;;		Interrupt level 2
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           	psect	intcode
   259  000008                     __pintcode:
   260                           	opt stack 0
   261  000008                     _encoder:
   262                           	opt stack 29
   263                           
   264                           ;incstack = 0
   265  000008  8216               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   266  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   267                           intcon	equ	0xFF2
   268                           intcon2	equ	0xFF1
   269                           status	equ	0xFD8
   270                           
   271                           	psect	intcode_body
   272  000012                     __pintcode_body:
   273                           	opt stack 29
   274  000012                     int_func:
   275                           	opt stack 29
   276  000012  0006               	pop		; remove dummy address from shadow register refresh
   277  000014  CFFA F002          	movff	pclath,??_encoder+1
   278  000018  CFFB F003          	movff	pclatu,??_encoder+2
   279  00001C  CFE9 F004          	movff	fsr0l,??_encoder+3
   280  000020  CFEA F005          	movff	fsr0h,??_encoder+4
   281  000024  CFE1 F006          	movff	fsr1l,??_encoder+5
   282  000028  CFE2 F007          	movff	fsr1h,??_encoder+6
   283  00002C  CFD9 F008          	movff	fsr2l,??_encoder+7
   284  000030  CFDA F009          	movff	fsr2h,??_encoder+8
   285  000034  CFF3 F00A          	movff	prodl,??_encoder+9
   286  000038  CFF4 F00B          	movff	prodh,??_encoder+10
   287  00003C  CFF6 F00C          	movff	tblptrl,??_encoder+11
   288  000040  CFF7 F00D          	movff	tblptrh,??_encoder+12
   289  000044  CFF8 F00E          	movff	tblptru,??_encoder+13
   290  000048  CFF5 F00F          	movff	tablat,??_encoder+14
   291  00004C  C016  F010         	movff	btemp,??_encoder+15
   292  000050  C017  F011         	movff	btemp+1,??_encoder+16
   293  000054  C018  F012         	movff	btemp+2,??_encoder+17
   294  000058  C019  F013         	movff	btemp+3,??_encoder+18
   295                           
   296                           ;main.c: 14: if(INTCONbits.INT0IF && INTCON2bits.INTEDG0){
   297  00005C  B2F2               	btfsc	intcon,1,c	;volatile
   298  00005E  ACF1               	btfss	intcon2,6,c	;volatile
   299  000060  D01A               	goto	i2l25
   300                           
   301                           ;main.c: 15: INTCONbits.INT0IF = 0;
   302  000062  92F2               	bcf	intcon,1,c	;volatile
   303                           
   304                           ;main.c: 16: _delay((unsigned long)((1)*(20000000/4000.0)));
   305  000064  0E07               	movlw	7
   306  000066  6E01               	movwf	??_encoder& (0+255),c
   307  000068  0E7D               	movlw	125
   308  00006A                     i2u12_47:
   309  00006A  2EE8               	decfsz	wreg,f,c
   310  00006C  D7FE               	bra	i2u12_47
   311  00006E  2E01               	decfsz	??_encoder& (0+255),f,c
   312  000070  D7FC               	bra	i2u12_47
   313  000072  F000               	nop	
   314                           
   315                           ;main.c: 17: if(PORTBbits.RB0 == PORTBbits.RB1){
   316  000074  A281               	btfss	3969,1,c	;volatile
   317  000076  D002               	goto	i2u3_40
   318  000078  0E01               	movlw	1
   319  00007A  D001               	goto	i2u3_42
   320  00007C                     i2u3_40:
   321  00007C  0E00               	movlw	0
   322  00007E                     i2u3_42:
   323  00007E  6E01               	movwf	??_encoder& (0+255),c
   324  000080  A081               	btfss	3969,0,c	;volatile
   325  000082  D002               	goto	i2u4_40
   326  000084  0E01               	movlw	1
   327  000086  D001               	goto	i2u4_42
   328  000088                     i2u4_40:
   329  000088  0E00               	movlw	0
   330  00008A                     i2u4_42:
   331  00008A  1A01               	xorwf	??_encoder,f,c
   332  00008C  A4D8               	btfss	status,2,c
   333  00008E  D020               	goto	i2l29
   334                           
   335                           ;main.c: 18: INTCON2bits.INTEDG0 = 0;
   336  000090  9CF1               	bcf	intcon2,6,c	;volatile
   337                           
   338                           ;main.c: 19: cuenta++;
   339  000092  2A15               	incf	_cuenta,f,c
   340                           
   341                           ;main.c: 20: }
   342                           ;main.c: 21: }
   343  000094  D01D               	goto	i2l29
   344  000096                     i2l25:
   345                           
   346                           ;main.c: 22: else if(INTCONbits.INT0IF && !INTCON2bits.INTEDG0){
   347  000096  B2F2               	btfsc	intcon,1,c	;volatile
   348  000098  BCF1               	btfsc	intcon2,6,c	;volatile
   349  00009A  D01A               	goto	i2l29
   350                           
   351                           ;main.c: 23: INTCONbits.INT0IF = 0;
   352  00009C  92F2               	bcf	intcon,1,c	;volatile
   353                           
   354                           ;main.c: 24: _delay((unsigned long)((1)*(20000000/4000.0)));
   355  00009E  0E07               	movlw	7
   356  0000A0  6E01               	movwf	??_encoder& (0+255),c
   357  0000A2  0E7D               	movlw	125
   358  0000A4                     i2u13_47:
   359  0000A4  2EE8               	decfsz	wreg,f,c
   360  0000A6  D7FE               	bra	i2u13_47
   361  0000A8  2E01               	decfsz	??_encoder& (0+255),f,c
   362  0000AA  D7FC               	bra	i2u13_47
   363  0000AC  F000               	nop	
   364                           
   365                           ;main.c: 25: if(PORTBbits.RB0 == PORTBbits.RB1){
   366  0000AE  A281               	btfss	3969,1,c	;volatile
   367  0000B0  D002               	goto	i2u8_40
   368  0000B2  0E01               	movlw	1
   369  0000B4  D001               	goto	i2u8_42
   370  0000B6                     i2u8_40:
   371  0000B6  0E00               	movlw	0
   372  0000B8                     i2u8_42:
   373  0000B8  6E01               	movwf	??_encoder& (0+255),c
   374  0000BA  A081               	btfss	3969,0,c	;volatile
   375  0000BC  D002               	goto	i2u9_40
   376  0000BE  0E01               	movlw	1
   377  0000C0  D001               	goto	i2u9_42
   378  0000C2                     i2u9_40:
   379  0000C2  0E00               	movlw	0
   380  0000C4                     i2u9_42:
   381  0000C4  1A01               	xorwf	??_encoder,f,c
   382  0000C6  A4D8               	btfss	status,2,c
   383  0000C8  D003               	goto	i2l29
   384                           
   385                           ;main.c: 26: INTCON2bits.INTEDG0 = 1;
   386  0000CA  8CF1               	bsf	intcon2,6,c	;volatile
   387                           
   388                           ;main.c: 27: semaforo = 1;
   389  0000CC  0E01               	movlw	1
   390  0000CE  6E14               	movwf	_semaforo,c
   391  0000D0                     i2l29:
   392  0000D0  C013  F019         	movff	??_encoder+18,btemp+3
   393  0000D4  C012  F018         	movff	??_encoder+17,btemp+2
   394  0000D8  C011  F017         	movff	??_encoder+16,btemp+1
   395  0000DC  C010  F016         	movff	??_encoder+15,btemp
   396  0000E0  C00F  FFF5         	movff	??_encoder+14,tablat
   397  0000E4  C00E  FFF8         	movff	??_encoder+13,tblptru
   398  0000E8  C00D  FFF7         	movff	??_encoder+12,tblptrh
   399  0000EC  C00C  FFF6         	movff	??_encoder+11,tblptrl
   400  0000F0  C00B  FFF4         	movff	??_encoder+10,prodh
   401  0000F4  C00A  FFF3         	movff	??_encoder+9,prodl
   402  0000F8  C009  FFDA         	movff	??_encoder+8,fsr2h
   403  0000FC  C008  FFD9         	movff	??_encoder+7,fsr2l
   404  000100  C007  FFE2         	movff	??_encoder+6,fsr1h
   405  000104  C006  FFE1         	movff	??_encoder+5,fsr1l
   406  000108  C005  FFEA         	movff	??_encoder+4,fsr0h
   407  00010C  C004  FFE9         	movff	??_encoder+3,fsr0l
   408  000110  C003  FFFB         	movff	??_encoder+2,pclatu
   409  000114  C002  FFFA         	movff	??_encoder+1,pclath
   410  000118  9216               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   411  00011A  0011               	retfie		f
   412  00011C                     __end_of_encoder:
   413                           	opt stack 0
   414  0000                     pclatu	equ	0xFFB
   415                           pclath	equ	0xFFA
   416                           tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           prodh	equ	0xFF4
   421                           prodl	equ	0xFF3
   422                           intcon	equ	0xFF2
   423                           intcon2	equ	0xFF1
   424                           fsr0h	equ	0xFEA
   425                           fsr0l	equ	0xFE9
   426                           wreg	equ	0xFE8
   427                           fsr1h	equ	0xFE2
   428                           fsr1l	equ	0xFE1
   429                           fsr2h	equ	0xFDA
   430                           fsr2l	equ	0xFD9
   431                           status	equ	0xFD8
   432                           pclatu	equ	0xFFB
   433                           pclath	equ	0xFFA
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           prodh	equ	0xFF4
   439                           prodl	equ	0xFF3
   440                           intcon	equ	0xFF2
   441                           intcon2	equ	0xFF1
   442                           fsr0h	equ	0xFEA
   443                           fsr0l	equ	0xFE9
   444                           wreg	equ	0xFE8
   445                           fsr1h	equ	0xFE2
   446                           fsr1l	equ	0xFE1
   447                           fsr2h	equ	0xFDA
   448                           fsr2l	equ	0xFD9
   449                           status	equ	0xFD8
   450                           
   451                           	psect	rparam
   452  0000                     pclatu	equ	0xFFB
   453                           pclath	equ	0xFFA
   454                           tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           prodh	equ	0xFF4
   459                           prodl	equ	0xFF3
   460                           intcon	equ	0xFF2
   461                           intcon2	equ	0xFF1
   462                           fsr0h	equ	0xFEA
   463                           fsr0l	equ	0xFE9
   464                           wreg	equ	0xFE8
   465                           fsr1h	equ	0xFE2
   466                           fsr1l	equ	0xFE1
   467                           fsr2h	equ	0xFDA
   468                           fsr2l	equ	0xFD9
   469                           status	equ	0xFD8
   470                           
   471                           	psect	temp
   472  000016                     btemp:
   473                           	opt stack 0
   474  000016                     	ds	1
   475  0000                     int$flags	set	btemp
   476  0000                     wtemp6	set	btemp+1
   477                           pclatu	equ	0xFFB
   478                           pclath	equ	0xFFA
   479                           tblptru	equ	0xFF8
   480                           tblptrh	equ	0xFF7
   481                           tblptrl	equ	0xFF6
   482                           tablat	equ	0xFF5
   483                           prodh	equ	0xFF4
   484                           prodl	equ	0xFF3
   485                           intcon	equ	0xFF2
   486                           intcon2	equ	0xFF1
   487                           fsr0h	equ	0xFEA
   488                           fsr0l	equ	0xFE9
   489                           wreg	equ	0xFE8
   490                           fsr1h	equ	0xFE2
   491                           fsr1l	equ	0xFE1
   492                           fsr2h	equ	0xFDA
   493                           fsr2l	equ	0xFD9
   494                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _encoder in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _encoder in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _encoder in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _encoder in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _encoder in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _encoder in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _encoder in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _encoder in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _encoder in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _encoder                                             19    19      0       0
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _encoder (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      15       1       22.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      20        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue May 08 01:11:49 2018

                     l35 0120              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000  
                    wreg 000FE8             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _LATB 000F8A                     i2l25 0096  
                   i2l29 00D0                     _main 011C                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0016  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
          __CFG_USBDIV$1 000000                    _TRISB 000F93            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
        __end_of_encoder 011C            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _setup 0132  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
                  wtemp6 0017           __CFG_ICPRT$OFF 000000          __initialization 0148  
           __end_of_main 0132                   ??_main 0014            __activetblptr 000000  
                 ?_setup 0001                   i2u3_40 007C                   i2u3_42 007E  
                 i2u4_40 0088                   i2u4_42 008A                   i2u8_40 00B6  
                 i2u8_42 00B8                   i2u9_40 00C2                   i2u9_42 00C4  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                   _cuenta 0015  
              ??_encoder 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 014C  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_setup 0148                  ??_setup 0014                  i2u12_47 006A  
                i2u13_47 00A4          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0148                  __ramtop 0800  
                __ptext0 011C                  __ptext1 0132                  _encoder 0008  
         __pintcode_body 0012     end_of_initialization 014C                  int_func 0012  
              _PORTBbits 000F81      start_initialization 0148         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0014                __pintcode 0008                 ?_encoder 0001  
         __size_of_setup 0016                 _RCONbits 000FD0         __CFG_WDTPS$32768 000000  
            _INTCON2bits 000FF1                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_encoder 0114            __size_of_main 0016                 _semaforo 0014  
               int$flags 0016    __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2  
               intlevel2 0000  
