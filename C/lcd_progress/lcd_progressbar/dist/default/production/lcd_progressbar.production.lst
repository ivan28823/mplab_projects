

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 18 01:39:04 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 1.45 (B)
    20                           ; Generated 30/01/2018 GMT
    21                           ; 
    22                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	smallconst
    55  000800                     __psmallconst:
    56                           	opt stack 0
    57  000800  00                 	db	0
    58  000801  00                 	db	0
    59  000802  00                 	db	0
    60  000803  00                 	db	0
    61  000804  00                 	db	0
    62  000805  00                 	db	0
    63  000806  00                 	db	0
    64  000807  00                 	db	0
    65  000808  1F                 	db	31
    66  000809  00                 	db	0
    67  00080A  00                 	db	0
    68  00080B  00                 	db	0
    69  00080C  00                 	db	0
    70  00080D  00                 	db	0
    71  00080E  00                 	db	0
    72  00080F  1F                 	db	31
    73  000810  1F                 	db	31
    74  000811  00                 	db	0
    75  000812  00                 	db	0
    76  000813  00                 	db	0
    77  000814  00                 	db	0
    78  000815  00                 	db	0
    79  000816  1F                 	db	31
    80  000817  1F                 	db	31
    81  000818  1F                 	db	31
    82  000819  00                 	db	0
    83  00081A  00                 	db	0
    84  00081B  00                 	db	0
    85  00081C  00                 	db	0
    86  00081D  1F                 	db	31
    87  00081E  1F                 	db	31
    88  00081F  1F                 	db	31
    89  000820  1F                 	db	31
    90  000821  00                 	db	0
    91  000822  00                 	db	0
    92  000823  00                 	db	0
    93  000824  1F                 	db	31
    94  000825  1F                 	db	31
    95  000826  1F                 	db	31
    96  000827  1F                 	db	31
    97  000828  1F                 	db	31
    98  000829  00                 	db	0
    99  00082A  00                 	db	0
   100  00082B  1F                 	db	31
   101  00082C  1F                 	db	31
   102  00082D  1F                 	db	31
   103  00082E  1F                 	db	31
   104  00082F  1F                 	db	31
   105  000830  1F                 	db	31
   106  000831  00                 	db	0
   107  000832  1F                 	db	31
   108  000833  1F                 	db	31
   109  000834  1F                 	db	31
   110  000835  1F                 	db	31
   111  000836  1F                 	db	31
   112  000837  1F                 	db	31
   113  000838  1F                 	db	31
   114  000839  1F                 	db	31
   115  00083A  1F                 	db	31
   116  00083B  1F                 	db	31
   117  00083C  1F                 	db	31
   118  00083D  1F                 	db	31
   119  00083E  1F                 	db	31
   120  00083F  1F                 	db	31
   121  000840  1F                 	db	31
   122  000841                     __end_of_animation:
   123                           	opt stack 0
   124  000841                     _init_str:
   125                           	opt stack 0
   126  000841  28                 	db	40
   127  000842  0C                 	db	12
   128  000843  01                 	db	1
   129  000844  06                 	db	6
   130  000845                     __end_of_init_str:
   131                           	opt stack 0
   132  000845                     lcd_status@animation:
   133                           	opt stack 0
   134  000845  00                 	db	0
   135  000846  00                 	db	0
   136  000847  00                 	db	0
   137  000848  00                 	db	0
   138  000849  00                 	db	0
   139  00084A  00                 	db	0
   140  00084B  00                 	db	0
   141  00084C  1F                 	db	31
   142  00084D  00                 	db	0
   143  00084E  00                 	db	0
   144  00084F  00                 	db	0
   145  000850  00                 	db	0
   146  000851  00                 	db	0
   147  000852  00                 	db	0
   148  000853  1F                 	db	31
   149  000854  1F                 	db	31
   150  000855  00                 	db	0
   151  000856  00                 	db	0
   152  000857  00                 	db	0
   153  000858  00                 	db	0
   154  000859  00                 	db	0
   155  00085A  1F                 	db	31
   156  00085B  1F                 	db	31
   157  00085C  1F                 	db	31
   158  00085D  00                 	db	0
   159  00085E  00                 	db	0
   160  00085F  00                 	db	0
   161  000860  00                 	db	0
   162  000861  1F                 	db	31
   163  000862  1F                 	db	31
   164  000863  1F                 	db	31
   165  000864  1F                 	db	31
   166  000865  00                 	db	0
   167  000866  00                 	db	0
   168  000867  00                 	db	0
   169  000868  1F                 	db	31
   170  000869  1F                 	db	31
   171  00086A  1F                 	db	31
   172  00086B  1F                 	db	31
   173  00086C  1F                 	db	31
   174  00086D  00                 	db	0
   175  00086E  00                 	db	0
   176  00086F  1F                 	db	31
   177  000870  1F                 	db	31
   178  000871  1F                 	db	31
   179  000872  1F                 	db	31
   180  000873  1F                 	db	31
   181  000874  1F                 	db	31
   182  000875  00                 	db	0
   183  000876  1F                 	db	31
   184  000877  1F                 	db	31
   185  000878  1F                 	db	31
   186  000879  1F                 	db	31
   187  00087A  1F                 	db	31
   188  00087B  1F                 	db	31
   189  00087C  1F                 	db	31
   190  00087D  1F                 	db	31
   191  00087E  1F                 	db	31
   192  00087F  1F                 	db	31
   193  000880  1F                 	db	31
   194  000881  1F                 	db	31
   195  000882  1F                 	db	31
   196  000883  1F                 	db	31
   197  000884  1F                 	db	31
   198  000885                     __end_oflcd_status@animation:
   199                           	opt stack 0
   200  0000                     _TRISCbits	set	3988
   201  0000                     _TRISD	set	3989
   202  0000                     _LATD	set	3980
   203  0000                     _LATCbits	set	3979
   204                           
   205                           ; #config settings
   206  000885  00                 	db	0	; dummy byte at the end
   207  0000                     
   208                           	psect	cinit
   209  000B50                     __pcinit:
   210                           	opt stack 0
   211  000B50                     start_initialization:
   212                           	opt stack 0
   213  000B50                     __initialization:
   214                           	opt stack 0
   215  000B50                     end_of_initialization:
   216                           	opt stack 0
   217  000B50                     __end_of__initialization:
   218                           	opt stack 0
   219  000B50  0E00               	movlw	low (__Lmediumconst shr (0+16))
   220  000B52  6EF8               	movwf	tblptru,c
   221  000B54  0100               	movlb	0
   222  000B56  EF04  F005         	goto	_main	;jump to C main() function
   223                           tblptru	equ	0xFF8
   224                           
   225                           	psect	cstackCOMRAM
   226  000001                     __pcstackCOMRAM:
   227                           	opt stack 0
   228  000001                     send_nibble@data:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0x0
   232  000001                     	ds	1
   233  000002                     send_nibble@comand:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x1
   237  000002                     	ds	1
   238  000003                     send_nibble@i:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0x2
   242  000003                     	ds	1
   243  000004                     send_byte@data:
   244                           	opt stack 0
   245                           
   246                           ; 1 bytes @ 0x3
   247  000004                     	ds	1
   248  000005                     send_byte@comand:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0x4
   252  000005                     	ds	1
   253  000006                     ??_lcd_init:
   254  000006                     lcd_gotoxy@y:
   255                           	opt stack 0
   256  000006                     set_sgram_byte@ptr:
   257                           	opt stack 0
   258                           
   259                           ; 2 bytes @ 0x5
   260  000006                     	ds	1
   261  000007                     lcd_gotoxy@x:
   262                           	opt stack 0
   263  000007                     lcd_init@i:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x6
   267  000007                     	ds	1
   268  000008                     set_sgram_byte@dir:
   269                           	opt stack 0
   270  000008                     _lcd_gotoxy$146:
   271                           	opt stack 0
   272                           
   273                           ; 2 bytes @ 0x7
   274  000008                     	ds	1
   275  000009                     set_sgram_byte@i:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0x8
   279  000009                     	ds	1
   280  00000A                     lcd_gotoxy@dir:
   281                           	opt stack 0
   282                           
   283                           ; 1 bytes @ 0x9
   284  00000A                     	ds	1
   285  00000B                     _set_level$168:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0xA
   289  00000B                     	ds	2
   290  00000D                     _set_level$169:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0xC
   294  00000D                     	ds	2
   295  00000F                     _set_level$170:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0xE
   299  00000F                     	ds	2
   300  000011                     _set_level$171:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x10
   304  000011                     	ds	2
   305  000013                     _set_level$172:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x12
   309  000013                     	ds	2
   310  000015                     _set_level$173:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x14
   314  000015                     	ds	2
   315  000017                     set_level@level:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0x16
   319  000017                     	ds	1
   320  000018                     set_level@i:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x17
   324  000018                     	ds	1
   325  000019                     set_level@j:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x18
   329  000019                     	ds	1
   330  00001A                     init_level@i:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x19
   334  00001A                     	ds	1
   335  00001B                     ??_main:
   336                           
   337                           ; 1 bytes @ 0x1A
   338  00001B                     	ds	2
   339  00001D                     main@i:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x1C
   343  00001D                     	ds	1
   344  00001E                     main@i_49:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x1D
   348  00001E                     	ds	1
   349                           tblptru	equ	0xFF8
   350                           
   351 ;;
   352 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   353 ;;
   354 ;; *************** function _main *****************
   355 ;; Defined at:
   356 ;;		line 5 in file "main.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;  i               1   29[COMRAM] unsigned char 
   361 ;;  i               1   28[COMRAM] unsigned char 
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   371 ;;      Params:         0       0       0       0       0       0       0       0       0
   372 ;;      Locals:         2       0       0       0       0       0       0       0       0
   373 ;;      Temps:          2       0       0       0       0       0       0       0       0
   374 ;;      Totals:         4       0       0       0       0       0       0       0       0
   375 ;;Total ram usage:        4 bytes
   376 ;; Hardware stack levels required when called:    5
   377 ;; This function calls:
   378 ;;		_init_level
   379 ;;		_lcd_init
   380 ;;		_set_level
   381 ;; This function is called by:
   382 ;;		Startup code after reset
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           	psect	text0
   387  000A08                     __ptext0:
   388                           	opt stack 0
   389  000A08                     _main:
   390                           	opt stack 26
   391                           
   392                           ;main.c: 6: lcd_init();
   393                           
   394                           ;incstack = 0
   395  000A08  ECAC  F004         	call	_lcd_init	;wreg free
   396                           
   397                           ;main.c: 7: init_level();
   398  000A0C  EC56  F005         	call	_init_level	;wreg free
   399  000A10                     
   400                           ;main.c: 9: for (byte i = 0; i < 16;_delay((unsigned long)((100)*(20000000/4000.0))), ++
      +                          i)
   401  000A10  0E00               	movlw	0
   402  000A12  6E1D               	movwf	main@i,c
   403  000A14                     l1124:
   404  000A14  0E0F               	movlw	15
   405  000A16  641D               	cpfsgt	main@i,c
   406  000A18  D001               	goto	l18
   407  000A1A  D010               	goto	u520
   408  000A1C                     l18:
   409                           
   410                           ;main.c: 10: set_level(i);
   411  000A1C  501D               	movf	main@i,w,c
   412  000A1E  EC43  F004         	call	_set_level
   413  000A22  0E03               	movlw	3
   414  000A24  6E1C               	movwf	(??_main+1)& (0+255),c
   415  000A26  0E8A               	movlw	138
   416  000A28  6E1B               	movwf	??_main& (0+255),c
   417  000A2A  0E56               	movlw	86
   418  000A2C                     u557:
   419  000A2C  2EE8               	decfsz	wreg,f,c
   420  000A2E  D7FE               	bra	u557
   421  000A30  2E1B               	decfsz	??_main& (0+255),f,c
   422  000A32  D7FC               	bra	u557
   423  000A34  2E1C               	decfsz	(??_main+1)& (0+255),f,c
   424  000A36  D7FA               	bra	u557
   425  000A38  2A1D               	incf	main@i,f,c
   426  000A3A  D7EC               	goto	l1124
   427  000A3C                     u520:
   428                           
   429                           ;main.c: 11: for (byte i = 14; i > 0;_delay((unsigned long)((100)*(20000000/4000.0))), -
      +                          -i)
   430  000A3C  0E0E               	movlw	14
   431  000A3E  6E1E               	movwf	main@i_49,c
   432  000A40  501E               	movf	main@i_49,w,c
   433  000A42  B4D8               	btfsc	status,2,c
   434  000A44  D7E5               	goto	l17
   435                           
   436                           ;main.c: 12: set_level(i);
   437  000A46  501E               	movf	main@i_49,w,c
   438  000A48  EC43  F004         	call	_set_level
   439  000A4C  0E03               	movlw	3
   440  000A4E  6E1C               	movwf	(??_main+1)& (0+255),c
   441  000A50  0E8A               	movlw	138
   442  000A52  6E1B               	movwf	??_main& (0+255),c
   443  000A54  0E56               	movlw	86
   444  000A56                     u567:
   445  000A56  2EE8               	decfsz	wreg,f,c
   446  000A58  D7FE               	bra	u567
   447  000A5A  2E1B               	decfsz	??_main& (0+255),f,c
   448  000A5C  D7FC               	bra	u567
   449  000A5E  2E1C               	decfsz	(??_main+1)& (0+255),f,c
   450  000A60  D7FA               	bra	u567
   451  000A62  061E               	decf	main@i_49,f,c
   452  000A64  D7ED               	goto	L1
   453  000A66                     __end_of_main:
   454                           	opt stack 0
   455                           tblptru	equ	0xFF8
   456                           wreg	equ	0xFE8
   457                           status	equ	0xFD8
   458                           
   459 ;; *************** function _lcd_init *****************
   460 ;; Defined at:
   461 ;;		line 32 in file "lcd.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  i               1    6[COMRAM] unsigned char 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   475 ;;      Params:         0       0       0       0       0       0       0       0       0
   476 ;;      Locals:         1       0       0       0       0       0       0       0       0
   477 ;;      Temps:          1       0       0       0       0       0       0       0       0
   478 ;;      Totals:         2       0       0       0       0       0       0       0       0
   479 ;;Total ram usage:        2 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; Hardware stack levels required when called:    2
   482 ;; This function calls:
   483 ;;		_send_byte
   484 ;;		_send_nibble
   485 ;; This function is called by:
   486 ;;		_main
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           	psect	text1
   491  000958                     __ptext1:
   492                           	opt stack 0
   493  000958                     _lcd_init:
   494                           	opt stack 28
   495                           
   496                           ;lcd.c: 33: byte i;
   497                           ;lcd.c: 34: TRISD = 0xF0;
   498                           
   499                           ;incstack = 0
   500  000958  0EF0               	movlw	240
   501  00095A  6E95               	movwf	3989,c	;volatile
   502                           
   503                           ;lcd.c: 35: TRISCbits.RC0 = TRISCbits.RC1 = 0;
   504  00095C  9294               	bcf	3988,1,c	;volatile
   505  00095E  9094               	bcf	3988,0,c	;volatile
   506                           
   507                           ;lcd.c: 36: LATCbits.LC0 = LATCbits.LC1 = 0;
   508  000960  928B               	bcf	3979,1,c	;volatile
   509  000962  908B               	bcf	3979,0,c	;volatile
   510                           
   511                           ;lcd.c: 37: LATD = 0x0F & 0x00;
   512  000964  0E00               	movlw	0
   513  000966  6E8C               	movwf	3980,c	;volatile
   514                           
   515                           ;lcd.c: 38: _delay((unsigned long)((15)*(20000000/4000.0)));
   516  000968  0E62               	movlw	98
   517  00096A  6E06               	movwf	??_lcd_init& (0+255),c
   518  00096C  0E66               	movlw	102
   519  00096E                     u577:
   520  00096E  2EE8               	decfsz	wreg,f,c
   521  000970  D7FE               	bra	u577
   522  000972  2E06               	decfsz	??_lcd_init& (0+255),f,c
   523  000974  D7FC               	bra	u577
   524                           
   525                           ;lcd.c: 39: for (i = 0; i < 3;_delay((unsigned long)((5)*(20000000/4000.0))), ++i)
   526  000976  0E00               	movlw	0
   527  000978  6E07               	movwf	lcd_init@i,c
   528  00097A                     l1074:
   529  00097A  0E02               	movlw	2
   530  00097C  6407               	cpfsgt	lcd_init@i,c
   531  00097E  D001               	goto	l60
   532  000980  D00F               	goto	u460
   533  000982                     l60:
   534                           
   535                           ;lcd.c: 40: send_nibble(0,3);
   536  000982  0E03               	movlw	3
   537  000984  6E01               	movwf	send_nibble@data,c
   538  000986  0E00               	movlw	0
   539  000988  EC84  F005         	call	_send_nibble
   540  00098C  0E21               	movlw	33
   541  00098E  6E06               	movwf	??_lcd_init& (0+255),c
   542  000990  0E76               	movlw	118
   543  000992                     u587:
   544  000992  2EE8               	decfsz	wreg,f,c
   545  000994  D7FE               	bra	u587
   546  000996  2E06               	decfsz	??_lcd_init& (0+255),f,c
   547  000998  D7FC               	bra	u587
   548  00099A  D000               	nop2	
   549  00099C  2A07               	incf	lcd_init@i,f,c
   550  00099E  D7ED               	goto	l1074
   551  0009A0                     u460:
   552                           
   553                           ;lcd.c: 41: send_nibble(0,2);
   554  0009A0  0E02               	movlw	2
   555  0009A2  6E01               	movwf	send_nibble@data,c
   556  0009A4  0E00               	movlw	0
   557  0009A6  EC84  F005         	call	_send_nibble
   558                           
   559                           ;lcd.c: 42: _delay((unsigned long)((5)*(20000000/4000.0)));
   560  0009AA  0E21               	movlw	33
   561  0009AC  6E06               	movwf	??_lcd_init& (0+255),c
   562  0009AE  0E76               	movlw	118
   563  0009B0                     u597:
   564  0009B0  2EE8               	decfsz	wreg,f,c
   565  0009B2  D7FE               	bra	u597
   566  0009B4  2E06               	decfsz	??_lcd_init& (0+255),f,c
   567  0009B6  D7FC               	bra	u597
   568  0009B8  D000               	nop2	
   569                           
   570                           ;lcd.c: 43: for (i = 0; i < 4; _delay((unsigned long)((5)*(20000000/4000.0))),++i)
   571  0009BA  0E00               	movlw	0
   572  0009BC  6E07               	movwf	lcd_init@i,c
   573  0009BE                     l1092:
   574  0009BE  0E03               	movlw	3
   575  0009C0  6407               	cpfsgt	lcd_init@i,c
   576  0009C2  D001               	goto	l62
   577  0009C4  D018               	goto	u480
   578  0009C6                     l62:
   579                           
   580                           ;lcd.c: 44: send_byte(0,init_str[i]);
   581  0009C6  5007               	movf	lcd_init@i,w,c
   582  0009C8  0D01               	mullw	1
   583  0009CA  0E41               	movlw	low _init_str
   584  0009CC  24F3               	addwf	prodl,w,c
   585  0009CE  6EF6               	movwf	tblptrl,c
   586  0009D0  0E08               	movlw	high _init_str
   587  0009D2  20F4               	addwfc	prodh,w,c
   588  0009D4  6EF7               	movwf	tblptrh,c
   589  0009D6                     	if	0	;There are less than 3 active tblptr bytes
   590  0009D6                     	endif
   591  0009D6  0008               	tblrd		*
   592  0009D8  CFF5 F004          	movff	tablat,send_byte@data
   593  0009DC  0E00               	movlw	0
   594  0009DE  EC9B  F005         	call	_send_byte
   595  0009E2  0E21               	movlw	33
   596  0009E4  6E06               	movwf	??_lcd_init& (0+255),c
   597  0009E6  0E76               	movlw	118
   598  0009E8                     u607:
   599  0009E8  2EE8               	decfsz	wreg,f,c
   600  0009EA  D7FE               	bra	u607
   601  0009EC  2E06               	decfsz	??_lcd_init& (0+255),f,c
   602  0009EE  D7FC               	bra	u607
   603  0009F0  D000               	nop2	
   604  0009F2  2A07               	incf	lcd_init@i,f,c
   605  0009F4  D7E4               	goto	l1092
   606  0009F6                     u480:
   607                           
   608                           ;lcd.c: 45: _delay((unsigned long)((1)*(20000000/4000.0)));
   609  0009F6  0E07               	movlw	7
   610  0009F8  6E06               	movwf	??_lcd_init& (0+255),c
   611  0009FA  0E7D               	movlw	125
   612  0009FC                     u617:
   613  0009FC  2EE8               	decfsz	wreg,f,c
   614  0009FE  D7FE               	bra	u617
   615  000A00  2E06               	decfsz	??_lcd_init& (0+255),f,c
   616  000A02  D7FC               	bra	u617
   617  000A04  F000               	nop	
   618  000A06  0012               	return		;funcret
   619  000A08                     __end_of_lcd_init:
   620                           	opt stack 0
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           prodh	equ	0xFF4
   626                           prodl	equ	0xFF3
   627                           wreg	equ	0xFE8
   628                           status	equ	0xFD8
   629                           
   630 ;; *************** function _init_level *****************
   631 ;; Defined at:
   632 ;;		line 14 in file "lcd_status.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;  i               1   25[COMRAM] unsigned char 
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   646 ;;      Params:         0       0       0       0       0       0       0       0       0
   647 ;;      Locals:         1       0       0       0       0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0       0
   649 ;;      Totals:         1       0       0       0       0       0       0       0       0
   650 ;;Total ram usage:        1 bytes
   651 ;; Hardware stack levels used:    1
   652 ;; Hardware stack levels required when called:    4
   653 ;; This function calls:
   654 ;;		_set_level
   655 ;;		_set_sgram_byte
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text2
   662  000AAC                     __ptext2:
   663                           	opt stack 0
   664  000AAC                     _init_level:
   665                           	opt stack 26
   666                           
   667                           ;lcd_status.c: 15: for (byte i = 0; i < 8; ++i)
   668                           
   669                           ;incstack = 0
   670  000AAC  0E00               	movlw	0
   671  000AAE  6E1A               	movwf	init_level@i,c
   672  000AB0                     l1108:
   673  000AB0  0E07               	movlw	7
   674  000AB2  641A               	cpfsgt	init_level@i,c
   675  000AB4  D001               	goto	l118
   676  000AB6  D00D               	goto	u500
   677  000AB8                     l118:
   678                           
   679                           ;lcd_status.c: 16: set_sgram_byte(i,*(animation + i));
   680  000AB8  501A               	movf	init_level@i,w,c
   681  000ABA  0D08               	mullw	8
   682  000ABC  0E45               	movlw	low lcd_status@animation
   683  000ABE  24F3               	addwf	prodl,w,c
   684  000AC0  6E06               	movwf	set_sgram_byte@ptr,c
   685  000AC2  0E08               	movlw	high lcd_status@animation
   686  000AC4  20F4               	addwfc	prodh,w,c
   687  000AC6  6E07               	movwf	set_sgram_byte@ptr+1,c
   688  000AC8  501A               	movf	init_level@i,w,c
   689  000ACA  EC33  F005         	call	_set_sgram_byte
   690  000ACE  2A1A               	incf	init_level@i,f,c
   691  000AD0  D7EF               	goto	l1108
   692  000AD2                     u500:
   693                           
   694                           ;lcd_status.c: 17: set_level(0);
   695  000AD2  0E00               	movlw	0
   696  000AD4  EC43  F004         	call	_set_level
   697  000AD8  0012               	return		;funcret
   698  000ADA                     __end_of_init_level:
   699                           	opt stack 0
   700                           tblptru	equ	0xFF8
   701                           tblptrh	equ	0xFF7
   702                           tblptrl	equ	0xFF6
   703                           tablat	equ	0xFF5
   704                           prodh	equ	0xFF4
   705                           prodl	equ	0xFF3
   706                           wreg	equ	0xFE8
   707                           status	equ	0xFD8
   708                           
   709 ;; *************** function _set_sgram_byte *****************
   710 ;; Defined at:
   711 ;;		line 20 in file "lcd.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  dir             1    wreg     unsigned char 
   714 ;;  ptr             2    5[COMRAM] PTR unsigned char 
   715 ;;		 -> lcd_status@animation(64), 
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  dir             1    7[COMRAM] unsigned char 
   718 ;;  i               1    8[COMRAM] unsigned char 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   728 ;;      Params:         2       0       0       0       0       0       0       0       0
   729 ;;      Locals:         2       0       0       0       0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0       0       0       0       0
   731 ;;      Totals:         4       0       0       0       0       0       0       0       0
   732 ;;Total ram usage:        4 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    2
   735 ;; This function calls:
   736 ;;		_send_byte
   737 ;; This function is called by:
   738 ;;		_init_level
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text3
   743  000A66                     __ptext3:
   744                           	opt stack 0
   745  000A66                     _set_sgram_byte:
   746                           	opt stack 27
   747                           
   748                           ;incstack = 0
   749                           ;set_sgram_byte@dir stored from wreg
   750  000A66  6E08               	movwf	set_sgram_byte@dir,c
   751                           
   752                           ;lcd.c: 21: dir <<= 3;
   753  000A68  90D8               	bcf	status,0,c
   754  000A6A  3608               	rlcf	set_sgram_byte@dir,f,c
   755  000A6C  90D8               	bcf	status,0,c
   756  000A6E  3608               	rlcf	set_sgram_byte@dir,f,c
   757  000A70  90D8               	bcf	status,0,c
   758  000A72  3608               	rlcf	set_sgram_byte@dir,f,c
   759                           
   760                           ;lcd.c: 22: dir &= 0x38;
   761  000A74  0E38               	movlw	56
   762  000A76  1608               	andwf	set_sgram_byte@dir,f,c
   763                           
   764                           ;lcd.c: 23: send_byte(0, 0x40 | dir);
   765  000A78  5008               	movf	set_sgram_byte@dir,w,c
   766  000A7A  0940               	iorlw	64
   767  000A7C  6E04               	movwf	send_byte@data,c
   768  000A7E  0E00               	movlw	0
   769  000A80  EC9B  F005         	call	_send_byte
   770                           
   771                           ;lcd.c: 24: for(byte i=0; i<8; i++)
   772  000A84  0E00               	movlw	0
   773  000A86  6E09               	movwf	set_sgram_byte@i,c
   774  000A88                     l1052:
   775  000A88  0E07               	movlw	7
   776  000A8A  6409               	cpfsgt	set_sgram_byte@i,c
   777  000A8C  D001               	goto	l48
   778  000A8E  0012               	return	
   779  000A90                     l48:
   780                           
   781                           ;lcd.c: 25: send_byte(1, *ptr++);
   782  000A90  C006  FFF6         	movff	set_sgram_byte@ptr,tblptrl
   783  000A94  C007  FFF7         	movff	set_sgram_byte@ptr+1,tblptrh
   784  000A98                     	if	0	;tblptru may be non-zero
   785  000A98                     	endif
   786  000A98                     	if	0	;tblptru may be non-zero
   787  000A98                     	endif
   788  000A98  0008               	tblrd		*
   789  000A9A  CFF5 F004          	movff	tablat,send_byte@data
   790  000A9E  0E01               	movlw	1
   791  000AA0  EC9B  F005         	call	_send_byte
   792  000AA4  4A06               	infsnz	set_sgram_byte@ptr,f,c
   793  000AA6  2A07               	incf	set_sgram_byte@ptr+1,f,c
   794  000AA8  2A09               	incf	set_sgram_byte@i,f,c
   795  000AAA  D7EE               	goto	l1052
   796  000AAC                     __end_of_set_sgram_byte:
   797                           	opt stack 0
   798                           tblptru	equ	0xFF8
   799                           tblptrh	equ	0xFF7
   800                           tblptrl	equ	0xFF6
   801                           tablat	equ	0xFF5
   802                           prodh	equ	0xFF4
   803                           prodl	equ	0xFF3
   804                           wreg	equ	0xFE8
   805                           status	equ	0xFD8
   806                           
   807 ;; *************** function _set_level *****************
   808 ;; Defined at:
   809 ;;		line 5 in file "lcd_status.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  level           1    wreg     unsigned char 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  level           1   22[COMRAM] unsigned char 
   814 ;;  j               1   24[COMRAM] unsigned char 
   815 ;;  i               1   23[COMRAM] unsigned char 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   825 ;;      Params:         0       0       0       0       0       0       0       0       0
   826 ;;      Locals:        15       0       0       0       0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0
   828 ;;      Totals:        15       0       0       0       0       0       0       0       0
   829 ;;Total ram usage:       15 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; Hardware stack levels required when called:    3
   832 ;; This function calls:
   833 ;;		_lcd_gotoxy
   834 ;;		_send_byte
   835 ;; This function is called by:
   836 ;;		_main
   837 ;;		_init_level
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text4
   842  000886                     __ptext4:
   843                           	opt stack 0
   844  000886                     _set_level:
   845                           	opt stack 27
   846                           
   847                           ;incstack = 0
   848                           ;set_level@level stored from wreg
   849  000886  6E17               	movwf	set_level@level,c
   850                           
   851                           ;lcd_status.c: 6: if(level >=0 && level <=15)
   852  000888  0E10               	movlw	16
   853  00088A  6017               	cpfslt	set_level@level,c
   854  00088C  0012               	return	
   855                           
   856                           ;lcd_status.c: 7: for(byte i = 1;i<3;i++){
   857  00088E  0E01               	movlw	1
   858  000890  6E18               	movwf	set_level@i,c
   859  000892                     l994:
   860  000892  0E02               	movlw	2
   861  000894  6418               	cpfsgt	set_level@i,c
   862  000896  D001               	goto	l87
   863  000898  0012               	return	
   864  00089A                     l87:
   865                           
   866                           ;lcd_status.c: 8: lcd_gotoxy(1,i);
   867  00089A  C018  F006         	movff	set_level@i,lcd_gotoxy@y
   868  00089E  0E01               	movlw	1
   869  0008A0  EC6D  F005         	call	_lcd_gotoxy
   870                           
   871                           ;lcd_status.c: 9: for(byte j = 0;j<16 ;j++)
   872  0008A4  0E00               	movlw	0
   873  0008A6  6E19               	movwf	set_level@j,c
   874  0008A8                     l1002:
   875  0008A8  0E0F               	movlw	15
   876  0008AA  6419               	cpfsgt	set_level@j,c
   877  0008AC  D001               	goto	l89
   878  0008AE  D052               	goto	u410
   879  0008B0                     l89:
   880                           
   881                           ;lcd_status.c: 10: send_byte(1,i==1? (j<8? ' ' : j<=level? j-8: ' '):(j<8? (j<=level? j:
      +                           ' '): (j<=level? 0x07: ' ')));
   882  0008B0  0418               	decf	set_level@i,w,c
   883  0008B2  B4D8               	btfsc	status,2,c
   884  0008B4  D029               	goto	l92
   885  0008B6  0E07               	movlw	7
   886  0008B8  6419               	cpfsgt	set_level@j,c
   887  0008BA  D011               	goto	l96
   888  0008BC  5019               	movf	set_level@j,w,c
   889  0008BE  5C17               	subwf	set_level@level,w,c
   890  0008C0  B0D8               	btfsc	status,0,c
   891  0008C2  D004               	goto	l100
   892  0008C4  0E00               	movlw	0
   893  0008C6  6E10               	movwf	_set_level$170+1,c
   894  0008C8  0E20               	movlw	32
   895  0008CA  D003               	goto	L2
   896  0008CC                     l100:
   897  0008CC  0E00               	movlw	0
   898  0008CE  6E10               	movwf	_set_level$170+1,c
   899  0008D0  0E07               	movlw	7
   900  0008D2                     L2:
   901  0008D2  6E0F               	movwf	_set_level$170,c
   902  0008D4  C00F  F00D         	movff	_set_level$170,_set_level$169
   903  0008D8  C010  F00E         	movff	_set_level$170+1,_set_level$169+1
   904  0008DC  D010               	goto	l98
   905  0008DE                     l96:
   906  0008DE  5019               	movf	set_level@j,w,c
   907  0008E0  5C17               	subwf	set_level@level,w,c
   908  0008E2  B0D8               	btfsc	status,0,c
   909  0008E4  D005               	goto	l104
   910  0008E6  0E00               	movlw	0
   911  0008E8  6E12               	movwf	_set_level$171+1,c
   912  0008EA  0E20               	movlw	32
   913  0008EC  6E11               	movwf	_set_level$171,c
   914  0008EE  D003               	goto	l106
   915  0008F0                     l104:
   916  0008F0  C019  F011         	movff	set_level@j,_set_level$171
   917  0008F4  6A12               	clrf	_set_level$171+1,c
   918  0008F6                     l106:
   919  0008F6  C011  F00D         	movff	_set_level$171,_set_level$169
   920  0008FA  C012  F00E         	movff	_set_level$171+1,_set_level$169+1
   921  0008FE                     l98:
   922  0008FE  C00D  F00B         	movff	_set_level$169,_set_level$168
   923  000902  C00E  F00C         	movff	_set_level$169+1,_set_level$168+1
   924  000906  D01F               	goto	l94
   925  000908                     l92:
   926  000908  0E07               	movlw	7
   927  00090A  6419               	cpfsgt	set_level@j,c
   928  00090C  D014               	goto	l108
   929  00090E  5019               	movf	set_level@j,w,c
   930  000910  5C17               	subwf	set_level@level,w,c
   931  000912  B0D8               	btfsc	status,0,c
   932  000914  D005               	goto	l112
   933  000916  0E00               	movlw	0
   934  000918  6E16               	movwf	_set_level$173+1,c
   935  00091A  0E20               	movlw	32
   936  00091C  6E15               	movwf	_set_level$173,c
   937  00091E  D006               	goto	l114
   938  000920                     l112:
   939  000920  0EF8               	movlw	248
   940  000922  2419               	addwf	set_level@j,w,c
   941  000924  6E15               	movwf	_set_level$173,c
   942  000926  6A16               	clrf	_set_level$173+1,c
   943  000928  0EFF               	movlw	255
   944  00092A  2216               	addwfc	_set_level$173+1,f,c
   945  00092C                     l114:
   946  00092C  C015  F013         	movff	_set_level$173,_set_level$172
   947  000930  C016  F014         	movff	_set_level$173+1,_set_level$172+1
   948  000934  D004               	goto	l110
   949  000936                     l108:
   950  000936  0E00               	movlw	0
   951  000938  6E14               	movwf	_set_level$172+1,c
   952  00093A  0E20               	movlw	32
   953  00093C  6E13               	movwf	_set_level$172,c
   954  00093E                     l110:
   955  00093E  C013  F00B         	movff	_set_level$172,_set_level$168
   956  000942  C014  F00C         	movff	_set_level$172+1,_set_level$168+1
   957  000946                     l94:
   958  000946  C00B  F004         	movff	_set_level$168,send_byte@data
   959  00094A  0E01               	movlw	1
   960  00094C  EC9B  F005         	call	_send_byte
   961  000950  2A19               	incf	set_level@j,f,c
   962  000952  D7AA               	goto	l1002
   963  000954                     u410:
   964  000954  2A18               	incf	set_level@i,f,c
   965  000956  D79D               	goto	l994
   966  000958                     __end_of_set_level:
   967                           	opt stack 0
   968                           tblptru	equ	0xFF8
   969                           tblptrh	equ	0xFF7
   970                           tblptrl	equ	0xFF6
   971                           tablat	equ	0xFF5
   972                           prodh	equ	0xFF4
   973                           prodl	equ	0xFF3
   974                           wreg	equ	0xFE8
   975                           status	equ	0xFD8
   976                           
   977 ;; *************** function _lcd_gotoxy *****************
   978 ;; Defined at:
   979 ;;		line 27 in file "lcd.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  x               1    wreg     unsigned char 
   982 ;;  y               1    5[COMRAM] unsigned char 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  x               1    6[COMRAM] unsigned char 
   985 ;;  dir             1    9[COMRAM] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   995 ;;      Params:         1       0       0       0       0       0       0       0       0
   996 ;;      Locals:         4       0       0       0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0       0       0
   998 ;;      Totals:         5       0       0       0       0       0       0       0       0
   999 ;;Total ram usage:        5 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    2
  1002 ;; This function calls:
  1003 ;;		_send_byte
  1004 ;; This function is called by:
  1005 ;;		_set_level
  1006 ;;		_putch
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text5
  1011  000ADA                     __ptext5:
  1012                           	opt stack 0
  1013  000ADA                     _lcd_gotoxy:
  1014                           	opt stack 27
  1015                           
  1016                           ;incstack = 0
  1017                           ;lcd_gotoxy@x stored from wreg
  1018  000ADA  6E07               	movwf	lcd_gotoxy@x,c
  1019                           
  1020                           ;lcd.c: 28: byte dir = y!=1? 0x40:0;
  1021  000ADC  0406               	decf	lcd_gotoxy@y,w,c
  1022  000ADE  A4D8               	btfss	status,2,c
  1023  000AE0  D004               	goto	l54
  1024  000AE2  0E00               	movlw	0
  1025  000AE4  6E09               	movwf	_lcd_gotoxy$146+1,c
  1026  000AE6  0E00               	movlw	0
  1027  000AE8  D003               	goto	L3
  1028  000AEA                     l54:
  1029  000AEA  0E00               	movlw	0
  1030  000AEC  6E09               	movwf	_lcd_gotoxy$146+1,c
  1031  000AEE  0E40               	movlw	64
  1032  000AF0                     L3:
  1033  000AF0  6E08               	movwf	_lcd_gotoxy$146,c
  1034  000AF2  C008  F00A         	movff	_lcd_gotoxy$146,lcd_gotoxy@dir
  1035                           
  1036                           ;lcd.c: 29: dir += x-1;
  1037  000AF6  0407               	decf	lcd_gotoxy@x,w,c
  1038  000AF8  260A               	addwf	lcd_gotoxy@dir,f,c
  1039                           
  1040                           ;lcd.c: 30: send_byte(0,0x80|dir);
  1041  000AFA  500A               	movf	lcd_gotoxy@dir,w,c
  1042  000AFC  0980               	iorlw	128
  1043  000AFE  6E04               	movwf	send_byte@data,c
  1044  000B00  0E00               	movlw	0
  1045  000B02  EC9B  F005         	call	_send_byte
  1046  000B06  0012               	return		;funcret
  1047  000B08                     __end_of_lcd_gotoxy:
  1048                           	opt stack 0
  1049                           tblptru	equ	0xFF8
  1050                           tblptrh	equ	0xFF7
  1051                           tblptrl	equ	0xFF6
  1052                           tablat	equ	0xFF5
  1053                           prodh	equ	0xFF4
  1054                           prodl	equ	0xFF3
  1055                           wreg	equ	0xFE8
  1056                           status	equ	0xFD8
  1057                           
  1058 ;; *************** function _send_byte *****************
  1059 ;; Defined at:
  1060 ;;		line 11 in file "lcd.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  comand          1    wreg     unsigned char 
  1063 ;;  data            1    3[COMRAM] unsigned char 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  comand          1    4[COMRAM] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1075 ;;      Params:         1       0       0       0       0       0       0       0       0
  1076 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1078 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1079 ;;Total ram usage:        2 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:    1
  1082 ;; This function calls:
  1083 ;;		_send_nibble
  1084 ;; This function is called by:
  1085 ;;		_set_sgram_byte
  1086 ;;		_lcd_gotoxy
  1087 ;;		_lcd_init
  1088 ;;		_set_level
  1089 ;;		_putch
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text6
  1094  000B36                     __ptext6:
  1095                           	opt stack 0
  1096  000B36                     _send_byte:
  1097                           	opt stack 28
  1098                           
  1099                           ;incstack = 0
  1100                           ;send_byte@comand stored from wreg
  1101  000B36  6E05               	movwf	send_byte@comand,c
  1102                           
  1103                           ;lcd.c: 13: send_nibble(comand,data>>4);
  1104  000B38  3804               	swapf	send_byte@data,w,c
  1105  000B3A  0B0F               	andlw	15
  1106  000B3C  6E01               	movwf	send_nibble@data,c
  1107  000B3E  5005               	movf	send_byte@comand,w,c
  1108  000B40  EC84  F005         	call	_send_nibble
  1109                           
  1110                           ;lcd.c: 14: send_nibble(comand,data);
  1111  000B44  C004  F001         	movff	send_byte@data,send_nibble@data
  1112  000B48  5005               	movf	send_byte@comand,w,c
  1113  000B4A  EC84  F005         	call	_send_nibble
  1114  000B4E  0012               	return		;funcret
  1115  000B50                     __end_of_send_byte:
  1116                           	opt stack 0
  1117                           tblptru	equ	0xFF8
  1118                           tblptrh	equ	0xFF7
  1119                           tblptrl	equ	0xFF6
  1120                           tablat	equ	0xFF5
  1121                           prodh	equ	0xFF4
  1122                           prodl	equ	0xFF3
  1123                           wreg	equ	0xFE8
  1124                           status	equ	0xFD8
  1125                           
  1126 ;; *************** function _send_nibble *****************
  1127 ;; Defined at:
  1128 ;;		line 4 in file "lcd.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  comand          1    wreg     unsigned char 
  1131 ;;  data            1    0[COMRAM] unsigned char 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  comand          1    1[COMRAM] unsigned char 
  1134 ;;  i               1    2[COMRAM] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1144 ;;      Params:         1       0       0       0       0       0       0       0       0
  1145 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1147 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1148 ;;Total ram usage:        3 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_send_byte
  1154 ;;		_lcd_init
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text7
  1159  000B08                     __ptext7:
  1160                           	opt stack 0
  1161  000B08                     _send_nibble:
  1162                           	opt stack 28
  1163                           
  1164                           ;incstack = 0
  1165                           ;send_nibble@comand stored from wreg
  1166  000B08  6E02               	movwf	send_nibble@comand,c
  1167                           
  1168                           ;lcd.c: 5: LATCbits.LC1 = comand; __nop();
  1169  000B0A  B002               	btfsc	send_nibble@comand,0,c
  1170  000B0C  D002               	bra	u285
  1171  000B0E  928B               	bcf	3979,1,c	;volatile
  1172  000B10  D001               	bra	u286
  1173  000B12                     u285:
  1174  000B12  828B               	bsf	3979,1,c	;volatile
  1175  000B14                     u286:
  1176  000B14  F000               	nop	
  1177                           
  1178                           ;lcd.c: 6: LATCbits.LC0 = 1; __nop();
  1179  000B16  808B               	bsf	3979,0,c	;volatile
  1180  000B18  F000               	nop	
  1181                           
  1182                           ;lcd.c: 7: LATD = 0x0F & data; __nop();
  1183  000B1A  5001               	movf	send_nibble@data,w,c
  1184  000B1C  0B0F               	andlw	15
  1185  000B1E  6E8C               	movwf	3980,c	;volatile
  1186  000B20  F000               	nop	
  1187                           
  1188                           ;lcd.c: 8: LATCbits.LC0 = 0;
  1189  000B22  908B               	bcf	3979,0,c	;volatile
  1190                           
  1191                           ;lcd.c: 9: for(byte i=0;i<20;i++) __nop();
  1192  000B24  0E00               	movlw	0
  1193  000B26  6E03               	movwf	send_nibble@i,c
  1194  000B28                     l968:
  1195  000B28  0E13               	movlw	19
  1196  000B2A  6403               	cpfsgt	send_nibble@i,c
  1197  000B2C  D001               	goto	l40
  1198  000B2E  0012               	return	
  1199  000B30                     l40:
  1200  000B30  F000               	nop	
  1201  000B32  2A03               	incf	send_nibble@i,f,c
  1202  000B34  D7F9               	goto	l968
  1203  000B36                     __end_of_send_nibble:
  1204                           	opt stack 0
  1205                           tblptru	equ	0xFF8
  1206                           tblptrh	equ	0xFF7
  1207                           tblptrl	equ	0xFF6
  1208                           tablat	equ	0xFF5
  1209                           prodh	equ	0xFF4
  1210                           prodl	equ	0xFF3
  1211                           wreg	equ	0xFE8
  1212                           status	equ	0xFD8
  1213                           tblptru	equ	0xFF8
  1214                           tblptrh	equ	0xFF7
  1215                           tblptrl	equ	0xFF6
  1216                           tablat	equ	0xFF5
  1217                           prodh	equ	0xFF4
  1218                           prodl	equ	0xFF3
  1219                           wreg	equ	0xFE8
  1220                           status	equ	0xFD8
  1221                           
  1222                           	psect	rparam
  1223  0000                     tblptru	equ	0xFF8
  1224                           tblptrh	equ	0xFF7
  1225                           tblptrl	equ	0xFF6
  1226                           tablat	equ	0xFF5
  1227                           prodh	equ	0xFF4
  1228                           prodl	equ	0xFF3
  1229                           wreg	equ	0xFE8
  1230                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    132
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    set_sgram_byte@ptr	PTR unsigned char  size(2) Largest target is 64
		 -> lcd_status@animation(CODE[64]), 


Critical Paths under _main in COMRAM

    _main->_init_level
    _lcd_init->_send_byte
    _init_level->_set_level
    _set_sgram_byte->_send_byte
    _set_level->_lcd_gotoxy
    _lcd_gotoxy->_send_byte
    _send_byte->_send_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8671
                                             26 COMRAM     4     4      0
                         _init_level
                           _lcd_init
                          _set_level
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0    1522
                                              5 COMRAM     2     2      0
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _init_level                                           1     1      0    4143
                                             25 COMRAM     1     1      0
                          _set_level
                     _set_sgram_byte
 ---------------------------------------------------------------------------------
 (2) _set_sgram_byte                                       4     2      2    1183
                                              5 COMRAM     4     2      2
                          _send_byte
 ---------------------------------------------------------------------------------
 (1) _set_level                                           15    15      0    2870
                                             10 COMRAM    15    15      0
                         _lcd_gotoxy
                          _send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     4      1    1334
                                              5 COMRAM     5     4      1
                          _send_byte
 ---------------------------------------------------------------------------------
 (2) _send_byte                                            2     1      1    1014
                                              3 COMRAM     2     1      1
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _send_nibble                                          3     2      1     394
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_level
     _set_level
       _lcd_gotoxy
         _send_byte
           _send_nibble
       _send_byte
         _send_nibble
     _set_sgram_byte
       _send_byte
         _send_nibble
   _lcd_init
     _send_byte
       _send_nibble
     _send_nibble
   _set_level
     _lcd_gotoxy
       _send_byte
         _send_nibble
     _send_byte
       _send_nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     1E      1E       1       31.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 18 01:39:04 2018

                         l40 0B30                           l17 0A10                           l18 0A1C  
                         l60 0982                           l54 0AEA                           l62 09C6  
                         l48 0A90                           l92 0908                           l94 0946  
                         l87 089A                           l96 08DE                           l89 08B0  
                         l98 08FE                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                        l100 08CC                          l110 093E                          l112 0920  
                        l104 08F0                          l114 092C                          l106 08F6  
                        l108 0936                          l118 0AB8                          l968 0B28  
                        l994 0892                 __CFG_CPB$OFF 000000                          u410 0954  
                        u500 0AD2                          u520 0A3C                 __CFG_CPD$OFF 000000  
                        u460 09A0                          u285 0B12                          u286 0B14  
                        u607 09E8                          u480 09F6                          u617 09FC  
                        u557 0A2C                          u567 0A56                          u577 096E  
                        u587 0992                          u597 09B0                 __CFG_BOR$OFF 000000  
                        prod 000FF3                          wreg 000FE8                 __CFG_FOSC$HS 000000  
                lcd_gotoxy@x 0007                  lcd_gotoxy@y 0006                 __CFG_LVP$OFF 000000  
               __CFG_WDT$OFF 000000                         l1002 08A8                         l1052 0A88  
                       l1108 0AB0                         l1124 0A14                         l1074 097A  
                       l1092 09BE                         _LATD 000F8C                         _main 0A08  
                       prodh 000FF4                         prodl 000FF3                         start 0000  
              __CFG_IESO$OFF 000000  __end_oflcd_status@animation 0885                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                __CFG_PLLDIV$1 000000               __CFG_CCP2MX$ON 000000  
                      ?_main 0001                __CFG_USBDIV$1 000000                        _TRISD 000F95  
              __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000              send_byte@comand 0005  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
                      main@i 001D                        tablat 000FF5              send_nibble@data 0001  
                      status 000FD8               __CFG_ICPRT$OFF 000000              __initialization 0B50  
               __end_of_main 0A66                lcd_gotoxy@dir 000A                       ??_main 001B  
              __activetblptr 000002                 ?_send_nibble 0001               __CFG_XINST$OFF 000000  
           __end_of_lcd_init 0A08               __CFG_STVREN$ON 000000             __end_of_init_str 0845  
                init_level@i 001A                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8              set_sgram_byte@i 0009  
                 __accesstop 0060      __end_of__initialization 0B50              __CFG_PBADEN$OFF 000000  
              ___rparam_used 000001               __pcstackCOMRAM 0001      __size_of_set_sgram_byte 0046  
         __size_of_send_byte 001A           __size_of_set_level 00D2                   _lcd_gotoxy 0ADA  
                  ?_lcd_init 0001              __CFG_VREGEN$OFF 000000         __size_of_send_nibble 002E  
          __end_of_animation 0841                      __Hparam 0000                      __Lparam 0000  
               __psmallconst 0800                   _init_level 0AAC                      __pcinit 0B50  
                    __ramtop 0800                      __ptext0 0A08                      __ptext1 0958  
                    __ptext2 0AAC                      __ptext3 0A66                      __ptext4 0886  
                    __ptext5 0ADA                      __ptext6 0B36                      __ptext7 0B08  
                 ??_lcd_init 0006         end_of_initialization 0B50            __end_of_send_byte 0B50  
              __Lmediumconst 0000            __end_of_set_level 0958            send_nibble@comand 0002  
             set_level@level 0017                    _TRISCbits 000F94                  ?_lcd_gotoxy 0006  
              send_byte@data 0004               _set_sgram_byte 0A66                  ?_init_level 0001  
        start_initialization 0B50       __end_of_set_sgram_byte 0AAC          __size_of_lcd_gotoxy 002E  
           __CFG_LPT1OSC$OFF 000000          lcd_status@animation 0845            __size_of_lcd_init 00B0  
        __size_of_init_level 002E              ?_set_sgram_byte 0006                    _animation 0801  
                __smallconst 0800                ??_send_nibble 0002                   set_level@i 0018  
                 set_level@j 0019                     _LATCbits 000F8B                    _send_byte 0B36  
              _set_level$170 000F                _set_level$171 0011                _set_level$172 0013  
              _set_level$173 0015                _set_level$168 000B                _set_level$169 000D  
                  _set_level 0886             __CFG_WDTPS$32768 000000                    lcd_init@i 0007  
               send_nibble@i 0003                 ??_lcd_gotoxy 0007          __end_of_send_nibble 0B36  
                 ?_send_byte 0004                     __Hrparam 0000                   ?_set_level 0001  
                   __Lrparam 0000           __end_of_lcd_gotoxy 0B08                 ??_init_level 001A  
                   _lcd_init 0958                __size_of_main 005E                     _init_str 0841  
         __end_of_init_level 0ADA               _lcd_gotoxy$146 0008                     main@i_49 001E  
      __CFG_CPUDIV$OSC1_PLL2 000000                  _send_nibble 0B08             ??_set_sgram_byte 0008  
                ??_send_byte 0005                  ??_set_level 000B            set_sgram_byte@dir 0008  
          set_sgram_byte@ptr 0006  
